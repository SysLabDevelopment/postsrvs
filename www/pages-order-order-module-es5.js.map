{"version":3,"sources":["webpack:///src/app/pages/order/order.module.ts","webpack:///src/app/pages/order/order.page.html","webpack:///src/app/pages/order/order.page.ts"],"names":["routes","path","component","OrderPageModule","forChild","imports","declarations","OrderPage","router","route","courier","state$","auth","http","CL","sys","settings","sysMap","data","storage","cache","network","orderService","bs","device","modalController","orderId","clientId","status_id","status","goods","address","order","name","timeFrom","timeTo","phone","pageInit","statuses","id","reasons","reason","commentText","g_quants","changeWindow","selectedPayment","client_status","client_status_dt","client_status_id","vlog","poruch","mass","amount","email_input","phone_input","barcode_flag","barcode_url","barcode","selectedReason","selectedStatus","hide_status","$codeStop","showPhone","podrazd","email_error","pay_access","pay_access_data","show_info","show_email","callWindow","drawimage","imageToShow","orderPhones","today","Date","tomorrow","openCompany","drawNeedle","snapshot","paramMap","get","initOrder","img","localStorage","getItem","initStatuses","setDate","getDate","note","url","JSON","stringify","post","need","draw","removeItem","create","showBackdrop","modal","present","onDidDismiss","details","console","log","doneOrder","phones","replace","length","normalizePhoneNumber","push","slice","action","parsePhone","courierPhone","courier_phone","selectedPhone","callNumber","then","type","phoneClick","client_number","cur_number","sendPost","subscribe","resp","showError","orders","filter","toString","client_address","datetime_from","datetime_to","client_phone","status_text","Number","Podrazd","coords","lt","lg","setQuants","ifPaid","getBalnce","getPayData","initClientInfo","states","client_states","getValue","state_id","client_state","i","state","good","code","Code","count","final_kol_vo","kol_vo","quant","price","Price","q","n_q","getSum","navigate","getStatus","newStatus","syncRequests","quants","new_plan_date","check","checkBase64Image","saveItem","client_id","localModifyOrders","sendDelayedCall","self","map","String","saveOrders","next","noSkip","changeStatus","undefined","toLocaleDateString","success","updateWayInfo","doOCR","recognizedData","text","presentToast","rur","item","callback_url","proxy","products","good_name","good_amount","good_price","Math","round","pos","quantity","purchase","order_data","apikey","api_key","login","cashier_name","mode","customer_email","customer_phone","card_amount","cash_amount","send_api_data","navigator","onLine","res","api_data","forEach","product","orderData","submitChange","checkPayment","requests","req","interval_1ss","pipe","mail_exp","infoStr","mail","exec","intentStart","showRoute","drawedImg","drawImg","drawBtn","checkPhoto","imageData","sendPayCall","setItem","infoUpdated","meta","label","scan","data1","uuid","changeQuant","cssClass","componentProps","height","selector","animations","templateUrl","styleUrls"],"mappings":"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","file":"pages-order-order-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { OrderPage } from './order.page';\nimport {IconsModule} from '../../icons/icons.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderPage\n  }\n];\n\n@NgModule({\n  imports: [\n    IconsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OrderPage]\n})\nexport class OrderPageModule { }\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title *ngIf='order'>{{order.client_id}}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *ngIf=\"order\">\n  <ion-list>\n    <ion-item>\n      <ion-label>\n        <div class='flex'>\n          <img src=\"../../../assets/a-b.svg\">\n          <div class='addresses'>\n            Адрес отправителя:\n            <p>{{order.company_address}}</p>\n            Адрес получателя:\n            <p>{{order.client_address}}</p>\n          </div>\n        </div>\n        <div class='client-id'>\n          Шифр: <span>{{order.client_id}} </span>\n        </div>\n      </ion-label>\n    </ion-item>\n    <ion-item class='datetime'>\n      <ion-label>\n        <div>\n          Дата доставки:\n          <p>\n            <span>\n              {{order.datetime_to | date: 'd.MM.yyyy'}}\n            </span>\n          </p>\n        </div>\n        <div class='time'>\n          Время доставки:\n          <p>\n            После <span>{{order.datetime_from | date: 'H:mm'}}</span> До\n            <span>{{order.datetime_to | date: 'H:mm'}}</span>\n          </p>\n        </div>\n      </ion-label>\n    </ion-item>\n    <ion-item>\n      <ion-label>\n        <div class='flex main-info'>\n          <div>\n            Имя: <span class='bold'>{{order.client_fio}} </span><br />\n            Компания: <span class='bold'>{{order.client_name}} </span><br />\n            Отдел: <span class='bold'>{{order.Podrazd}} </span>\n          </div>\n          <div>\n            Робот прозвон:\n            <div class=\"st_state\" [ngClass]=\"{\n              'status_done' : order.client_status_id == 1,\n              'status_wait' : order.client_status_id == 2,\n              'status_fail' : order.client_status_id == 3,\n              'status_none' : order.client_status_id == 8,\n              'cl-status-voice' : order.client_status_id == 4 }\">\n              {{order.client_status}}\n            </div>\n          </div>\n          <div>\n            Сумма с клиента:\n            <div class='primary-color bold' *ngIf='order.rur'>\n              {{order.rur.toLocaleString('ru')}} р.\n            </div>\n          </div>\n          <div>\n            Количество / Вес\n            <div class='primary-color bold'>{{order.amount}} шт. / {{order.mass}} кг</div>\n          </div>\n        </div>\n        <ion-button id='call' expand='full' fill='solid' (click)=\"phoneClick('init')\">\n          Позвонить клиенту\n        </ion-button>\n      </ion-label>\n    </ion-item>\n    <ion-item class='yellow'>\n      <ion-label>\n        Статус: <span class='bold'>{{getStatus()}} </span>\n      </ion-label>\n    </ion-item>\n    <ion-item *ngIf=\"order.poruch\">\n      <ion-label>\n        Комментарий к заказу\n        <div class='bold'>\n          {{order.poruch}}\n        </div>\n      </ion-label>\n    </ion-item>\n    <ion-item>\n      <ion-label [@openClose]=\"openCompany ? 'open' : 'closed'\">\n        Компания отправитель:\n        <div class='bold'>\n          {{order.company}}\n        </div>\n        <ion-card id=\"company-card\">\n          <ion-item class=\"ion-activated\" *ngIf=\"order.Cname\">\n            <ion-label>\n              <h3>Ответственное лицо</h3>\n              {{order.Cname}}\n            </ion-label>\n          </ion-item>\n          <ion-item class=\"ion-activated\" *ngIf=\"order.Cadress\">\n            <ion-label>\n              <h3>Адрес</h3>\n              {{order.Cadress}}\n            </ion-label>\n          </ion-item>\n          <ion-item class=\"ion-activated\" *ngIf=\"order.Cphone\">\n            <ion-label>\n              <h3>Основной телефон</h3>\n              {{order.Cphone}}\n            </ion-label>\n          </ion-item>\n          <ion-item class=\"ion-activated\" *ngIf=\"order.Cphone_s\">\n            <ion-label>\n              <h3>Дополнительный телефон</h3>\n              {{order.Cphone_s}}\n            </ion-label>\n          </ion-item>\n        </ion-card>\n      </ion-label>\n      <div class=\"actions-button\" (click)=\"tapBlock()\">\n        <ion-icon src='../../../assets/actions-arrows.svg' [ngClass]=\"{turned: openCompany == true }\"></ion-icon>\n      </div>\n    </ion-item>\n    <ion-item id='note-item'>\n      <ion-input placeholder='Введите заметку по заказу' [(ngModel)]=\"note\"></ion-input>\n      <ion-button (click)=\"saveNote()\">\n        <ion-icon slot=\"icon-only\" name=\"save\"></ion-icon>\n      </ion-button>\n    </ion-item>\n  </ion-list>\n  <div id='navigate-buttons'>\n    <ion-button expand=\"block\" fill=\"solid\" shape=\"round\" (click)=\"intentStart()\" class='action'>\n      Открыть в навигаторе\n    </ion-button>\n    <ion-button expand=\"block\" fill=\"solid\" shape=\"round\" (click)=\"showRoute(order)\" class='action'>\n      Показать на карте\n    </ion-button>\n  </div>\n  <div id='done-buttons' *ngIf=\"!(hide_status || status_id == 5 || status_id == 6 || status_id == 4)\">\n    <ion-button expand=\"full\" fill=\"solid\" shape=\"round\" id='light-purple-button' class='action'\n      (click)=\"selectStatus(4); presentNotDeliveredModal()\">\n      <ion-icon slot=\"start\" name=\"close\"></ion-icon>\n      Не доставлено\n    </ion-button>\n    <ion-button expand=\"full\" fill=\"solid\" shape=\"round\" id='light-blue-button' class='action'\n      (click)=\"selectStatus(6)\">\n      <ion-icon slot=\"start\" src='../../../assets/pie-chart.svg'></ion-icon>\n      Частично доставлено\n    </ion-button>\n    <ion-button expand=\"full\" fill=\"solid\" shape=\"round\" id='light-green-button' class='action'\n      (click)=\"selectStatus(5); presentDeliveredModal()\">\n      <ion-icon slot=\"start\" name=\"checkmark-done\"></ion-icon>\n      Доставлено\n    </ion-button>\n  </div>\n  <!-- Легаси! -->\n  <div class=\"sc-row o-row\" *ngIf=\"selectedStatus == 6 ||order.status_id == 6\">\n    <div class=\"sc-goods-block\">\n      <div class=\"goods-row o-row\">\n        <div class=\"gr-title o-t\">Товары в заказе</div>\n\n        <div class=\"gr-goods-list\">\n          <div class=\"gr-head\">\n            <div class=\"gr-col\">Название</div>\n            <div class=\"gr-col\">Кол-во</div>\n            <div class=\"gr-col\">Цена</div>\n          </div>\n          <div *ngFor=\"let good of goods\">\n            <div class=\"gr-item\" [ngClass]=\"{\n                            'st_fail': (g_quants[good.Code]['amount'] == 0),\n                            'st_done': (order.status_id == 6 && g_quants[good.Code]['amount'] > 0 )\n                          }\">\n              <div class=\"gr-col\">{{good.Name}}</div>\n              <div class=\"gr-col gr-quant\">\n                <div (click)=\"changeQuant(good.Code,'minus')\">\n                  <i-feather name=\"minus-circle\"></i-feather>\n                </div>\n                {{g_quants[good.Code]['amount']}}\n                <div (click)=\"changeQuant(good.Code,'plus')\">\n                  <i-feather name=\"plus-circle\"></i-feather>\n                </div>\n              </div>\n              <div class=\"gr-col gr-price\">{{good.Price}}р.</div>\n            </div>\n          </div>\n          <div><b>Итого: </b>{{order.rur}}р.</div>\n        </div>\n      </div>\n    </div>\n    <ion-button (click)=\"scanReturned()\" expand=\"block\" fill=\"solid\" shape=\"round\"\n      *ngIf=\"selectedStatus == 6 ||order.status_id == 6\">\n      Сканировать возврат\n    </ion-button>\n  </div>\n  <div>\n\n    <!-- Блок подписи -->\n    <div class=\"draw\" *ngIf=\"selectedStatus == 6\">\n      <div class=\"asc-row\">\n        <div class=\"title\">Требуется ли подпись клиента?</div>\n        <div class=\"draw-btns\">\n          <button class=\"drawBtn\" [ngClass]=\"{'draw_btn_active'   : drawNeedle}\" (click)=\"drawBtn(true)\">\n            Да\n          </button>\n          <button class=\"drawBtn\" [ngClass]=\"{'draw_btn_active'   : !drawNeedle}\" (click)=\"drawBtn(false)\">\n            Нет\n          </button>\n        </div>\n      </div>\n      <img [src]=\"imageToShow\" alt=\"Подпись\" *ngIf=\"imageToShow && drawNeedle\" style=\"height: 200px;\" />\n      <button *ngIf=\"drawNeedle\" class=\"drawBtn changeDraw\" (click)=\"drawBtn(true)\">Изменить подпись</button>\n    </div>\n    <div class=\"sc-payment\" *ngIf=\"selectedStatus == 6\">\n      <div class=\"sc-payment__title\">Оплата</div>\n      <div class=\"dc-payment__wrp\">\n        <div class=\"sc-payment-item\" [ngClass]=\"{'payment_active' : selectedPayment == 1}\" (click)=\"selectPayment('1')\">\n          Наличными\n        </div>\n        <div class=\"sc-payment-item\" [ngClass]=\"{'payment_active' : selectedPayment == 2}\" (click)=\"selectPayment('2')\">\n          Картой\n        </div>\n      </div>\n    </div>\n\n    <div class=\"sc-payment-block o-row\" *ngIf=\"pay_access && (selectedStatus == 6)  \">\n      <div class=\"pb-email\" *ngIf=\"show_email\">\n        <div class=\"pb-email__title\">Email клиента</div>\n        <input type=\"email\" class=\"pb-email__input\" [(ngModel)]=\"email_input\" />\n      </div>\n      <div class=\"pb-phone\">\n        <div class=\"pb-phone__title\" *ngIf=\"showPhone\">Телефон клиента</div>\n        <input *ngIf=\"showPhone\" type=\"tel\" class=\"pb-phone__input\" [(ngModel)]=\"phone_input\" />\n      </div>\n      <button class=\"show-phone\" (click)=\"enterPhone()\">Прочее</button>\n    </div>\n    <div class=\"dt-picker\" *ngIf=\"selectedReason == 8\">\n      <ion-item>\n        <ion-label position=\"floating\">MM/DD/YYYY</ion-label>\n        <ion-datetime displayFormat=\"DD/MM/YYYY\" min=\"{{today.toISOString()}}\" value=\"{{tomorrow.toISOString()}}\"\n          [(ngModel)]='new_plan_date'></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class=\"sc-s-wrp\">\n      <button class=\"sc-submit\" (click)=\"doneOrder()\" *ngIf=\"selectedStatus\"\n        [ngClass]=\"{'c_t_del'   : selectedStatus == 6}\">\n        <span *ngIf=\"selectedStatus == 6\" class=\"l_btn_del\">Доставлено</span>\n      </button>\n    </div>\n  </div>\n  <!-- Конец Легаси -->\n  <div id=\"call-window\" *ngIf=\"callWindow\">\n    <div class=\"cw-body\">\n      <i-feather name=\"x-square\" (click)=\"phoneClick('init')\" size=\"large\"></i-feather>\n      <ion-list *ngIf=\"orderPhones.length > 1\">\n        <ion-radio-group name=\"selectedPhone\" [(ngModel)]=\"selectedPhone\">\n          <ion-list-header>\n            <ion-label>Выберите номер</ion-label>\n          </ion-list-header>\n          <ion-item *ngFor=\"let phone of orderPhones\">\n            <ion-radio value=\"{{phone}}\"></ion-radio>\n            <ion-label>{{phone}}</ion-label>\n          </ion-item>\n        </ion-radio-group>\n      </ion-list>\n      <button (click)=\"phoneClick('phone')\"\n        *ngIf=\"settings.rules.phoneMode == 'robotPhone' || settings.rules.phoneMode == 'phone' \">\n        Позвонить со своего телефона\n      </button>\n      <button (click)=\"phoneClick('operator')\"\n        *ngIf=\"settings.rules.phoneMode == 'robotPhone' || settings.rules.phoneMode == 'robot' \">\n        Позвонить через ip-шлюз\n      </button>\n    </div>\n  </div>\n</ion-content>","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger\n} from \"@angular/animations\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { CallNumber } from \"@ionic-native/call-number/ngx\";\nimport { Device } from '@ionic-native/device/ngx';\nimport { Network } from '@ionic-native/network/ngx';\nimport { ModalController } from '@ionic/angular';\nimport { Storage } from \"@ionic/storage\";\nimport { CacheService } from \"ionic-cache\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Meta } from 'src/app/interfaces/meta';\nimport { Order } from 'src/app/interfaces/order';\nimport { DeliveredComponent } from '../../components/delivered/delivered.component';\nimport { NotDeliveredComponent } from '../../components/not-delivered/not-delivered.component';\nimport { Reason } from \"../../interfaces/reason\";\nimport { Statuses } from \"../../interfaces/statuses\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { CourierService } from \"../../services/courier.service\";\nimport { SettingsService } from \"../../services/settings.service\";\nimport { StateService } from \"../../services/state.service\";\nimport { SysService } from \"../../services/sys.service\";\nimport { MapService } from \"../../services/sys/map.service\";\nimport { OrderService } from '../../services/sys/order.service';\nimport { DrawPage } from '../draw/draw.page';\nimport { DataService } from './../../services/sys/data.service';\n\n@Component({\n  selector: \"app-order\",\n  animations: [\n    trigger('openClose', [\n      // ...\n      state('open', style({\n        height: '264px',\n      })),\n      state('closed', style({\n        height: '50px',\n      })),\n      transition('open => closed', [\n        animate('0.5s')\n      ]),\n      transition('closed => open', [\n        animate('0.5s')\n      ]),\n    ])],\n  templateUrl: \"./order.page.html\",\n  styleUrls: [\"./order.page.scss\"],\n})\nexport class OrderPage implements OnInit {\n  public orderId: string = null;\n  public clientId: string = null;\n  public status_id: number = null;\n  public status: string = null;\n  public goods: any = null;\n  public address: any = null;\n  public order: Order = null;\n  public name: string = null;\n  public timeFrom: string = null;\n  public timeTo: string = null;\n  public phone: string = null;\n  public pageInit: boolean = true;\n  public statuses: Statuses[] = [\n    { id: 4, status: \"Не доставлено\" },\n    { id: 5, status: \"Доставлено\" },\n    { id: 6, status: \"Частично доставлено\" },\n  ];\n  public reasons: Reason[] = [\n    { id: 1, reason: \"Не удалось Дозвониться!\" },\n    { id: 2, reason: \"Отказ, при созвоне с клиентом\" },\n    { id: 3, reason: \"Отказ от доставки без объяснения причины\" },\n    { id: 4, reason: \"Ошибка оформления ИМ\" },\n    { id: 5, reason: \"Получатель передумал\" },\n    { id: 6, reason: \"Товар не подошел/не понравился\" },\n    { id: 7, reason: \"Финансовые трудности у получателя\" },\n    { id: 8, reason: \"Перенос даты доставки получателем.\" },\n    { id: 10, reason: \"Не успел\" },\n    { id: 11, reason: \"Переехали/нев.Адрес\" },\n  ];\n  public commentText: any = null;\n  public g_quants: any = {};\n  public changeWindow: boolean = false;\n  public selectedPayment = \"1\";\n  public client_status = \"\";\n  public client_status_dt = \"\";\n  public client_status_id = \"\";\n  public vlog: string = null;\n  public poruch: string = null;\n  public mass: unknown = null;\n  public amount: unknown = null;\n  public email_input = \"\";\n  public phone_input = \"\";\n  public barcode_flag = false;\n  public barcode_url: string = null;\n  public barcode: unknown = null;\n  public selectedReason: any = null;\n  public selectedStatus: any = null;\n  public hide_status = false;\n  public $codeStop: Subject<any> = new Subject();\n  public showPhone: boolean = false;\n  public podrazd: unknown = null;\n  public email_error = false;\n  public pay_access: boolean = false;\n  public pay_access_data: any = null;\n  public show_info: boolean = false;\n  public show_email: boolean = false;\n  public callWindow: boolean = false;\n  public drawimage: boolean = false;\n  public imageToShow: string = null;\n  coords: Array<any>;\n  public orderPhones: Array<string> = [];\n  public selectedPhone: string;\n  public note: string;\n  public today = new Date();\n  public tomorrow = new Date();\n  public new_plan_date: string; //Дата переноса заказа\n  public openCompany = false;\n  public checkBase64Image: string;\n  public drawNeedle: boolean = true;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private courier: CourierService,\n    private state$: StateService,\n    private auth: AuthService,\n    private http: HttpClient,\n    private CL: CallNumber,\n    public sys: SysService,\n    public settings: SettingsService,\n    private sysMap: MapService,\n    private data: DataService,\n    private storage: Storage,\n    private cache: CacheService,\n    private network: Network,\n    private orderService: OrderService,\n    private bs: BarcodeScanner,\n    private device: Device,\n    public modalController: ModalController\n  ) {\n    this.orderId = this.route.snapshot.paramMap.get(\"id\");\n\n    this.initOrder();\n    var img = localStorage.getItem(\"drawImg\");\n    if (img) {\n      this.imageToShow = \"data:image/jpg;base64,\" + img;\n    }\n  }\n\n  ngOnInit() {\n    this.courier.initStatuses();\n    this.tomorrow.setDate(this.tomorrow.getDate() + 1);\n    this.note = localStorage.getItem(this.orderId);\n  }\n\n  ngAfterViewChecked() {\n    var img = localStorage.getItem(\"drawImg\");\n    if (img) {\n      this.imageToShow = \"data:image/jpg;base64,\" + img;\n    }\n  }\n\n  public sendPost(url: string, data: any) {\n    data = JSON.stringify(data);\n\n    return this.http.post(url, data);\n  }\n\n  public async drawBtn(need: boolean) {\n    this.drawNeedle = need;\n    if (need) {\n      this.draw()\n    } else {\n      localStorage.removeItem(\"drawImg\");\n    }\n  }\n  public async draw() {\n    const modal = await this.modalController.create({\n      component: DrawPage,\n      showBackdrop: false\n    });\n    await modal.present();\n    const details = await modal.onDidDismiss();\n    console.log('sys:: drawModal dismiss details: ', details);\n    if (details.data == 'ok') {\n      this.doneOrder();\n    }\n  }\n\n  public parsePhone(phone: string): Array<string> {\n    let phones: Array<string> = [];\n    phone = phone.replace(/\\D+/g, \"\");\n\n    while (phone.length > 7) {\n      phone = this.normalizePhoneNumber(phone);\n      phones.push(phone.slice(null, 11));\n      phone = phone.slice(11);\n    }\n\n    return phones;\n  }\n\n  private normalizePhoneNumber(phone: string): string {\n    if (phone[0] !== \"8\" && phone[0] !== \"7\" && phone.length !== 11) {\n      phone = \"8\" + phone;\n    }\n    if (phone.length == 7 || phone.length == 10) {\n      phone = \"8\" + phone;\n    }\n    if (phone[0] !== \"8\" && phone.length == 11) {\n      phone = \"8\" + phone.slice(1);\n    }\n    return phone;\n  }\n\n  public phoneClick(action: string) {\n    this.orderPhones = this.parsePhone(this.phone);\n    let courierPhone = this.parsePhone(this.order.courier_phone)[0];\n\n    if (this.orderPhones.length == 1) {\n      this.selectedPhone = this.orderPhones[0];\n    }\n\n    switch (action) {\n      case \"init\":\n        this.callWindow = !this.callWindow;\n        break;\n      case \"phone\":\n        this.CL.callNumber(this.selectedPhone, false).then(() => { });\n        this.callWindow = false;\n        break;\n      case \"operator\":\n        if (this.network.type == 'none') {\n          this.phoneClick('phone');\n          return false;\n        }\n        if (this.selectedPhone && courierPhone) {\n          let url = \"orders\";\n          let data = {\n            action: \"send_phone\",\n            client_number: this.selectedPhone,\n            cur_number: courierPhone,\n          };\n          this.auth.sendPost(url, data).subscribe((resp) => {\n            console.log(\"call_subs\", resp);\n          });\n          this.auth.showError(9);\n          this.callWindow = false;\n        }\n        break;\n    }\n  }\n\n  public initOrder() {\n    this.storage.get('orders').then((orders: Array<Order>) => {\n      console.log('Список заказов из стоража', orders);\n    })\n    this.storage.get('orders').then((orders) => {\n      this.order = orders?.filter((order: Order) => { return order.id.toString() == this.orderId })[0];\n      this.goods = this.order.goods;\n      this.address = this.order.client_address;\n      this.timeFrom = this.order.datetime_from;\n      this.timeTo = this.order.datetime_to;\n      this.phone = this.order.client_phone;\n      this.status = this.order.status_text;\n      this.status_id = Number(this.order.status_id);\n      this.client_status = this.order.client_status;\n      this.client_status_dt = this.order.client_status_dt;\n      this.vlog = this.order.vlog;\n      this.poruch = this.order.poruch;\n      (this.mass = this.order.mass), (this.amount = this.order.amount);\n      this.podrazd = this.order.Podrazd;\n      this.coords = [this.order.lt, this.order.lg];\n      this.setQuants();\n      this.ifPaid();\n      this.getBalnce();\n      this.getPayData();\n      this.initClientInfo();\n    });\n  }\n\n  public getClientState() {\n    var states = this.state$.client_states.getValue();\n    var state_id = this.order.client_state;\n\n    for (let i = 0; i < states.length; i++) {\n      if (states[i].id == state_id) {\n        return states[i].state;\n      }\n    }\n\n    return \"\";\n  }\n  //Заполняет массив с ценой товаров и их количеством(для частички)\n  public setQuants() {\n    var goods = this.order.goods;\n\n    for (var i = 0; i < goods.length; i++) {\n      let good = goods[i];\n      let code = good.Code;\n      let count = good.final_kol_vo ? good.final_kol_vo : good.kol_vo;\n      let quant = { amount: good.kol_vo, price: good.Price };\n      this.g_quants[code] = quant;\n    }\n  }\n\n  public changeQuant(code: string, action: string) {\n    var q: number = this.g_quants[code][\"amount\"];\n    var good = null;\n\n    for (var i = 0; i < this.order.goods.length; i++) {\n      if (this.order.goods[i].Code == code) {\n        good = this.order.goods[i];\n      }\n    }\n\n    if (action == \"plus\") {\n      var n_q = q + 1;\n\n      if (n_q > good.kol_vo) {\n        return false;\n      } else {\n        this.g_quants[code][\"amount\"] = n_q;\n      }\n    } else if (action == \"minus\") {\n      var n_q = q - 1;\n\n      if (n_q < 0) {\n        return false;\n      } else {\n        this.g_quants[code][\"amount\"] = n_q;\n      }\n    } else if (action == 'delete') {\n      this.g_quants[code][\"amount\"] = 0;\n    }\n    this.getSum();\n  }\n\n\n  public navBack() {\n    localStorage.removeItem(\"drawImg\");\n    this.router.navigate([\"/courier\"]);\n  }\n\n  public getStatus(): string {\n    return this.courier.getStatus(this.order);\n  }\n\n  public getBalnce() { }\n\n  public changeStatus() {\n    if (!this.changeWindow) {\n      this.changeWindow = true;\n    }\n  }\n\n  public close_window() {\n    this.changeWindow = false;\n  }\n\n  public selectStatus(id: number) {\n    this.selectedStatus = id;\n    if (id == 4 || id == 5) {\n      this.setQuants();\n      this.getSum();\n    }\n    if (id == 4) {\n      this.drawNeedle = false;\n    }\n  }\n\n\n  public sendPayCall(order: Order = this.order, newStatus = this.selectedStatus as number) {\n    if (this.network.type == 'none') {\n      //Если оффлайн\n      this.cache.getItem('syncRequests').then((syncRequests: Array<any>) => {\n        order = { ...{ phone_input: this.phone_input }, ...{ email_input: this.email_input }, ...{ quants: this.g_quants }, ...order, ...{ selectedPayment: this.selectedPayment }, ...{ selectedReason: this.selectedReason }, ...{ new_plan_date: this.new_plan_date }, ...{ commentText: this.commentText }, ...{ check: this.checkBase64Image } };\n        syncRequests && syncRequests.push({ order, newStatus });\n        this.cache.saveItem('syncRequests', syncRequests, 'delayedCalls').then(() => {\n          console.log(`sys:: Отложено изменение статуса на ${newStatus} для заказа ${order.client_id}`);\n          this.localModifyOrders(newStatus);\n          this.router.navigate(['courier']);\n        })\n      })\n    } else {\n      //Если онлайн\n      this.localModifyOrders(newStatus);\n      order = { ...{ phone_input: this.phone_input }, ...{ email_input: this.email_input }, ...{ quants: this.g_quants }, ...order, ...{ selectedPayment: this.selectedPayment }, ...{ selectedReason: this.selectedReason }, ...{ new_plan_date: this.new_plan_date }, ...{ commentText: this.commentText }, ...{ check: this.checkBase64Image } };\n      this.orderService.sendDelayedCall(order, newStatus);\n      this.router.navigate(['courier']);\n    }\n  }\n\n  public submitChange() {\n    let self = this;\n    this.storage.get('orders').then((orders) => {\n      orders?.map((order: Order) => {\n        if (String(order.id) == String(this.order.id)) {\n          order.status_id = this.selectedStatus;\n          this.data.saveOrders(orders);\n          this.data.orders.next(orders);\n        }\n      });\n    })\n    let noSkip = true;\n    switch (this.selectedStatus) {\n      case 4:\n        if (this.selectedReason != null) {\n          let new_plan_date = new Date(this.new_plan_date);\n\n          this.courier\n            .changeStatus(\n              this.selectedStatus,\n              String(this.order.id),\n              undefined,\n              this.selectedReason,\n              null,\n              null,\n              new_plan_date.toLocaleDateString()\n            )\n            .subscribe((data: any) => {\n              if (data.success == \"true\") {\n                self.changeWindow = false;\n                self.state$.state.next(\"init\");\n                self.selectedPayment = \"1\";\n                self.selectedReason = null;\n                self.selectedStatus = null;\n                self.router.navigate([\"courier\"]);\n                self.state$.updateWayInfo.next(\"0\");\n              }\n              localStorage.removeItem(\"drawImg\");\n            });\n        }\n        break;\n      case 5:\n        if (this.selectedPayment !== '2') {\n          noSkip = false\n        }\n        this.sys.doOCR(this.checkBase64Image, noSkip).then((recognizedData) => {\n          let text = (this.commentText ? this.commentText : \"\");\n          this.courier\n            .changeStatus(\n              this.selectedStatus,\n              String(this.order.id),\n              text,\n              undefined,\n              undefined,\n              this.selectedPayment,\n              '',\n              this.checkBase64Image,\n              recognizedData\n            )\n            .subscribe((data: any) => {\n              if (data.success == \"true\") {\n                self.changeWindow = false;\n                self.state$.state.next(\"init\");\n                self.selectedPayment = \"1\";\n                self.selectedReason = null;\n                self.selectedStatus = null;\n                if (!self.pay_access) {\n                  self.router.navigate([\"courier\"]);\n                }\n                self.initOrder();\n                self.state$.updateWayInfo.next(\"0\");\n              }\n              localStorage.removeItem(\"drawImg\");\n            });\n        })\n        break;\n      case 6:\n\n        if (this.selectedPayment !== '2') {\n          noSkip = false\n        }\n        this.sys.doOCR(this.checkBase64Image, noSkip).then((recognizedData) => {\n          this.courier\n            .changeStatus(\n              this.selectedStatus,\n              String(this.order.id),\n              undefined,\n              undefined,\n              this.g_quants,\n              this.selectedPayment,\n              '',\n              this.checkBase64Image,\n              recognizedData\n            )\n            .subscribe((data: any | null) => {\n              if (data?.success == \"true\") {\n                self.changeWindow = false;\n                self.state$.state.next(\"init\");\n                self.selectedPayment = \"1\";\n                self.selectedReason = null;\n                self.selectedStatus = null;\n                if (!self.pay_access) {\n                  self.router.navigate([\"courier\"]);\n                }\n                self.initOrder();\n                self.state$.updateWayInfo.next(\"0\");\n              } else {\n                this.sys.presentToast(\n                  \"Нет товаров в заказе\",\n                  \"danger\",\n                  \"Частичная доставка невозможна\"\n                );\n              }\n              localStorage.removeItem(\"drawImg\");\n            });\n        })\n        break;\n    }\n  }\n\n  public getSum() {\n    if (this.order) {\n      let price: number = 0;\n      let quants = this.g_quants;\n      for (let code in quants) {\n        price += quants[code][\"price\"] * quants[code][\"amount\"];\n      }\n\n      this.order.rur = price;\n    }\n  }\n\n  //подсчитывает сумму заказа\n  public getPrice(order: Order) {\n    if (order) {\n      let price: number = 0;\n      for (let i = 0; i < order.goods.length; i++) {\n        let good = order.goods[i];\n        price += Number(good.Price) * Number(good.kol_vo);\n      }\n      return price;\n    }\n  }\n\n  public selectPayment(item: string) {\n    this.selectedPayment = item;\n  }\n\n  public sendPay() {\n    let goods = this.order.goods;\n    let quants = this.g_quants;\n    let callback_url =\n      this.sys.proxy + \"https://mobile.postsrvs.ru/mobile/pay_callback.php\";\n    let products = [];\n\n    for (let code in quants) {\n      if (quants[code][\"amount\"] > 0) {\n        for (let i = 0; i < goods.length; i++) {\n          if (goods[i][\"Code\"] == code) {\n            let good_name = goods[i][\"Name\"];\n            let good_amount = quants[code][\"amount\"];\n            let good_price = Math.round(quants[code][\"price\"] * 100) / 100;\n            let pos = {\n              name: good_name,\n              price: good_price,\n              quantity: good_amount,\n            };\n            products.push(pos);\n          }\n        }\n      }\n    }\n\n    var purchase = { products: products };\n    console.log(\"goods_description\\n\", purchase);\n    var self = this;\n\n    if (this.pay_access) {\n\n      let order_data = {\n        apikey: String(this.pay_access_data.api_key),\n        login: String(this.pay_access_data.phone),\n        cashier_name:\n          String(this.pay_access_data.name) +\n          String(this.pay_access_data.phone),\n        purchase: purchase,\n        callback_url: callback_url,\n        mode: \"email\",\n        customer_email: this.email_input,\n        customer_phone: this.phone_input,\n        card_amount: '',\n        cash_amount: ''\n      };\n      if (self.selectedPayment == \"2\") {\n        order_data[\"card_amount\"] = \"#\";\n      } else {\n        order_data[\"cash_amount\"] = \"#\";\n      }\n\n      if (this.phone_input != \"\") {\n        order_data[\"customer_phone\"] = this.phone_input;\n      }\n\n      self.send_api_data(order_data);\n    }\n  }\n\n  //Получаем api key & login\n  public getPayData() {\n\n    let url = \"pay_order\";\n    let data = { action: \"getData\", orderId: this.clientId };\n    let self = this;\n    if (navigator.onLine) {\n      this.auth.sendPost(url, data).subscribe((res: any) => {\n        console.log(\"GET_PAY_DATA\", res);\n        if (res.success == \"true\") {\n          self.pay_access = true;\n          self.pay_access_data = res;\n        } else {\n          self.pay_access = false;\n        }\n      });\n    } else {\n      self.pay_access = false;\n    }\n  }\n\n  public send_api_data(api_data: any) {\n    let url = \"pay_order\";\n    let self = this;\n    this.order.rur = 0;\n\n    api_data.purchase.products.forEach((product: any) => {\n      this.order.rur += product.price * product.quantity;\n    });\n\n    var data = {\n      action: \"sendPay\",\n      orderData: api_data,\n      orderId: this.order.id,\n    };\n    if (navigator.onLine) {\n      this.auth.sendPost(url, data).subscribe((res: any) => {\n        self.submitChange();\n        self.checkPayment();\n        self.hide_status = true;\n      });\n    } else {\n      let requests: any[] = [];\n      this.cache.getItem('requests').then((req) => {\n        if (req !== undefined) {\n          requests = req;\n        }\n        requests.push({ url: url, data: data });\n        this.cache.saveItem('requests', requests);\n\n        self.submitChange();\n        self.checkPayment();\n        self.hide_status = true;\n      })\n\n    }\n  }\n\n\n  public checkPayment() {\n    var self = this;\n    this.state$.interval_1ss.pipe(takeUntil(this.$codeStop)).subscribe(() => {\n      self.ifPaid();\n      console.log(\"paid_iter\");\n    });\n  }\n\n  public ifPaid() {\n    var url = \"pay_order\";\n    var data = { action: \"checkPaid\", orderId: this.order.id };\n    var self = this;\n\n    this.auth.sendPost(url, data).subscribe((data) => {\n      if (data.success == \"true\" && data.barcode != null) {\n        self.barcode_flag = true;\n        self.barcode_url = data.barcode_url;\n        self.barcode = data.barcode;\n        self.$codeStop.next();\n        self.hide_status = true;\n      }\n    });\n  }\n\n  public enterPhone() {\n    if (this.showPhone) {\n      this.showPhone = false;\n      this.show_email = false;\n    } else {\n      this.showPhone = true;\n      this.show_email = true;\n    }\n  }\n\n\n\n  public initClientInfo() {\n    let mail_exp = /(?:([\\s.,]{1}))([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}/gm;\n    let infoStr = this.phone;\n    let mail = mail_exp.exec(infoStr);\n\n    if (mail != null) {\n      this.email_input = mail[0];\n    } else {\n      this.show_email = true;\n    }\n  }\n\n  public intentStart() {\n    this.state$.intentStart(this.coords);\n  }\n\n  public showRoute() {\n    this.sysMap.showRoute(this.order);\n\n  }\n\n  public doneOrder() {\n    let drawedImg = localStorage.drawImg;\n    if (this.drawNeedle && !drawedImg) {\n      this.drawBtn(this.drawNeedle);\n    } else {\n      if (this.selectedPayment == '2') {\n        this.sys.checkPhoto().then((imageData) => {\n          this.checkBase64Image = 'data:image/jpeg;base64,' + imageData;\n          this.sendPayCall();\n        });\n      } else {\n        this.sendPayCall();\n      }\n\n    }\n  }\n\n  public saveNote() {\n    localStorage.setItem(this.orderId, this.note);\n    this.sysMap.infoUpdated.next();\n  }\n\n  public tapBlock() {\n    this.openCompany = !this.openCompany;\n  }\n\n  public localModifyOrders(newStatus: number) {\n    let meta: Meta = {\n      label: 'localChanges'\n    };\n    this.storage.get('orders').then((orders) => {\n      orders?.map((order: Order) => {\n        if (order.id.toString() == this.order.id.toString()) {\n          order.status_id = newStatus;\n          this.data.saveOrders(orders).then(() => this.sysMap.infoUpdated.next(meta));\n          this.data.orders.next(orders);\n        }\n      });\n    })\n  }\n\n  public scanReturned() {\n    this.bs.scan().then((data) => {\n      const url = this.sys.proxy + 'https://mobile.postsrvs.ru/mobile/orders';\n      let data1 = {\n        \"orderId\": this.orderId,\n        \"box_barcode\": data.text,\n        \"action\": \"get_box\",\n        \"uuid\": this.device.uuid\n      };\n      this.http.post(url, data1).subscribe((res: string[]) => {\n        console.log(`sys:: ответ скана возврата: ${res}`);\n        this.changeQuant(res[0], 'delete')\n      })\n    })\n  }\n\n  async presentNotDeliveredModal() {\n    const modal = await this.modalController.create({\n      component: NotDeliveredComponent,\n      cssClass: 'done-order-modal',\n      componentProps: {\n        reasons: this.reasons\n      },\n      showBackdrop: true\n    });\n    await modal.present();\n    const details = await modal.onDidDismiss();\n    console.log('sys:: dismiss details: ', details);\n    this.selectedReason = details.data.selectedReason;\n    this.commentText = details.data.commentText;\n    details.data && this.doneOrder();\n  }\n\n  async presentDeliveredModal() {\n    const modal = await this.modalController.create({\n      component: DeliveredComponent,\n      cssClass: 'done-order-modal',\n      componentProps: {\n        goods: this.goods\n      },\n      showBackdrop: true\n    });\n    await modal.present();\n    const details = await modal.onDidDismiss();\n    console.log('sys:: dismiss details: ', details);\n    this.drawNeedle = details.data.drawNeedle;\n    this.selectedPayment = details.data.selectedPayment;\n    this.email_input = details.data.email_input;\n    this.phone_input = details.data.phone_input;\n    this.commentText = details.data.commentText;\n    if (details.data) {\n      this.doneOrder();\n    }\n\n  }\n}\n"]}