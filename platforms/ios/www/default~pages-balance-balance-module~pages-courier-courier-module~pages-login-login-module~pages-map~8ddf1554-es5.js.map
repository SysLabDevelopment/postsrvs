{"version":3,"sources":["webpack:///node_modules/@ionic-native/google-maps/ngx/index.js","webpack:///src/app/services/sys/map.service.ts"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","_this","TARGET_ELEMENT_FINDING_QUERYS","LatLng","lat","lng","equals","other","toString","toUrlValue","precision","toFixed","LatLngBounds","points","_objectInstance","GoogleMaps","getPlugin","extend","contains","getCenter","get","set","value","enumerable","configurable","TrafficModelId","BEST_GUESS","OPTIMISTIC","PESSIMISTIC","TransitModeId","BUS","RAIL","SUBWAY","TRAIN","TRAM","TransitRoutePreferenceId","FEWER_TRANSFERS","LESS_WALKING","UnitSystemId","IMPERIAL","METRIC","TravelModeId","BICYCLING","DRIVING","TRANSIT","WALKING","VehicleTypeId","CABLE_CAR","COMMUTER_TRAIN","FERRY","FUNICULAR","GONDOLA_LIFT","HEAVY_RAIL","HIGH_SPEED_TRAIN","INTERCITY_BUS","METRO_RAIL","MONORAIL","OTHER","SHARE_TAXI","TROLLEYBUS","VisibleRegion","southwest","northeast","farLeft","farRight","nearLeft","nearRight","StreetViewSource","DEFAULT","OUTDOOR","GoogleMapsEvent","MAP_READY","MAP_CLICK","MAP_LONG_CLICK","POI_CLICK","MY_LOCATION_CLICK","MY_LOCATION_BUTTON_CLICK","INDOOR_BUILDING_FOCUSED","INDOOR_LEVEL_ACTIVATED","CAMERA_MOVE_START","CAMERA_MOVE","CAMERA_MOVE_END","OVERLAY_CLICK","POLYGON_CLICK","POLYLINE_CLICK","CIRCLE_CLICK","GROUND_OVERLAY_CLICK","INFO_CLICK","INFO_LONG_CLICK","INFO_CLOSE","INFO_OPEN","MARKER_CLICK","MARKER_DRAG","MARKER_DRAG_START","MARKER_DRAG_END","MAP_DRAG","MAP_DRAG_START","MAP_DRAG_END","KML_CLICK","PANORAMA_READY","PANORAMA_CAMERA_CHANGE","PANORAMA_LOCATION_CHANGE","PANORAMA_CLICK","DIRECTIONS_CHANGED","GoogleMapsAnimation","BOUNCE","DROP","AnimationId","GoogleMapsMapTypeId","NORMAL","ROADMAP","SATELLITE","HYBRID","TERRAIN","NONE","MapTypeId","_super","apply","element","options","getPluginRef","getPluginName","HTMLElement","offsetParent","Error","getAttribute","tagName","googleMap","GoogleMap","errorMessage","window","cordova","push","displayErrorMessage","join","targets","from","document","querySelectorAll","filter","hasAttribute","__pluginMapId","undefined","console","error","createPanorama","StreetViewPanorama","pluginName","pluginRef","plugin","repo","install","platforms","message","errorDiv","createElement","innerHTML","style","color","position","width","height","top","bottom","right","left","padding","margin","backgroundColor","appendChild","ɵ0","normalizeArgumentsOfEventListener","args","BaseClass","type","__pgmId","indexOf","_overlays","getMap","overlay","getId","markerJS","markerId_1","markerCluster","Marker","one","ɵ1","objInstance","addEventListener","eventName","observer","_i","newArgs","call","next","addEventListenerOnce","resolve","addListenerOnce","warn","noNotify","bindTo","targetKey","on","hasEventListener","empty","trigger","parameters","destroy","removeEventListener","listener","off","BaseArrayClass","initialData","isArray","forEach","fn","forEachAsync","map","mapAsync","mapSeries","filterAsync","getArray","getAt","index","getLength","reverse","sort","insertAt","pop","removeAt","setAt","Circle","_map","setCenter","latLng","getRadius","setRadius","radius","setFillColor","getFillColor","setStrokeWidth","strokeWidth","getStrokeWidth","setStrokeColor","strokeColor","getStrokeColor","setClickable","clickable","getClickable","setZIndex","zIndex","getZIndex","remove","getBounds","setVisible","visible","getVisible","Environment","setEnv","envOptions","environment","getLicenseInfo","text","setBackgroundColor","Geocoder","geocode","request","address","reject","mvcArray","results","DirectionsService","route","ElevationService","getElevationAlongPath","getElevationForLocations","LocationService","getMyLocation","hasPermission","Encoding","decodePath","encoded","geometry","encoding","encodePath","path","Poly","containsLocation","location","poly","isLocationOnEdge","Spherical","computeDistanceBetween","to","spherical","computeOffset","distance","heading","computeOffsetOrigin","computeLength","computeArea","computeSignedArea","computeHeading","interpolate","fraction","offsetWidth","offsetHeight","StreetView","getPanorama","count","timer","setInterval","clearInterval","setPov","pov","setPosition","cameraPosition","setPanningGesturesEnabled","gestureEnable","getPanningGesturesEnabled","setZoomGesturesEnabled","getZoomGesturesEnabled","setStreetNamesEnabled","getStreetNamesEnabled","setNavigationEnabled","getNavigationEnabled","getLinks","getLocation","getPanoId","getPosition","_a","_b","StreetViewOptions","__timeout","Map","setDiv","domNode","then","getDiv","setMapTypeId","mapTypeId","animateCamera","animateCameraZoomIn","animateCameraZoomOut","moveCamera","moveCameraZoomIn","moveCameraZoomOut","getCameraPosition","getCameraTarget","getCameraZoom","getCameraBearing","getCameraTilt","setCameraTarget","setCameraZoom","zoomLevel","setCameraTilt","tiltAngle","setCameraBearing","bearing","panBy","x","y","getVisibleRegion","isClickable","clear","keys","overlayId","fromLatLngToPoint","fromPointToLatLng","point","setMyLocationEnabled","enabled","setMyLocationButtonEnabled","getFocusedBuilding","setIndoorEnabled","setTrafficEnabled","setCompassEnabled","setAllGesturesEnabled","setPadding","setOptions","addMarker","marker","overlayId_1","overlay_1","addMarkerSync","addMarkerCluster","overlayId_2","overlay_2","MarkerCluster","addMarkerClusterSync","addCircle","circle","overlayId_3","overlay_3","addCircleSync","addPolygon","polygon","overlayId_4","overlay_4","Polygon","addPolygonSync","addPolyline","polyline","overlayId_5","overlay_5","Polyline","addPolylineSync","addTileOverlay","tileOverlay","overlayId_6","overlay_6","TileOverlay","addTileOverlaySync","addGroundOverlay","groundOverlay","overlayId_7","overlay_7","GroundOverlay","addGroundOverlaySync","addKmlOverlay","kmlOverlay","overlayId_8","overlay_8","KmlOverlay","addDirectionsRendererSync","directionsRenderer","addDirectionsRenderer","DirectionsRenderer","toDataURL","_c","_d","GoogleMapOptions","Number","setBounds","bounds","setBearing","getBearing","setImage","imageUrl","setOpacity","opacity","getOpacity","HtmlInfoWindow","setContent","content","cssOptions","open","close","showInfoWindow","hideInfoWindow","setAnimation","animation","setDisableAutoPan","disableAutoPan","isVisible","setTitle","title","getTitle","setSnippet","snippet","getSnippet","alpha","setIconAnchor","setInfoWindowAnchor","isInfoWindowShown","setDraggable","draggable","isDraggable","setFlat","flat","setIcon","icon","setRotation","rotation","getRotation","addMarkers","markers","setPoints","getPoints","setHoles","holes","getHoles","hole","fillColor","setGeodesic","geodesic","getGeodesic","setGeoDesic","geoDesic","setFadeIn","fadeIn","getFadeIn","getTileSize","self","camera","writable","kmlData","getDefaultViewport","setDirections","result","getRouteIndex","getDirections","MapService","http","geo","device","platform","router","infoUpdated","coords","url","data","action","lt","lg","auto","mode","uuid","httpOptions","headers","post","divId","Promise","instance","setTimeout","mapType","ready","_loadMap","API_KEY_FOR_BROWSER_RELEASE","API_KEY_FOR_BROWSER_DEBUG","mapOptions","zoom","tilt","gestures","scroll","rotate","controls","compass","indoorPicker","myLocationButton","myLocation","mapToolbar","preferences","building","clickableIcons","restriction","orderId","log","navigate","localStorage","removeItem","page","order","meta","label","providedIn"],"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","file":"default~pages-balance-balance-module~pages-courier-courier-module~pages-login-login-module~pages-map~8ddf1554-es5.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _this = this;\nimport { IonicNativePlugin, instanceAvailability, cordovaInstance, instancePropertyGet, instancePropertySet, checkAvailability, getPromise } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nvar TARGET_ELEMENT_FINDING_QUERYS = [\n    '.show-page #',\n    'ion-router-outlet[main] #',\n    '#'\n];\nvar LatLng = /** @class */ (function () {\n    function LatLng(lat, lng) {\n        this.lat = lat;\n        this.lng = lng;\n    }\n    LatLng.prototype.equals = function (other) {\n        return this.lat === other.lat && this.lng === other.lng;\n    };\n    LatLng.prototype.toString = function () {\n        return this.lat + ',' + this.lng;\n    };\n    LatLng.prototype.toUrlValue = function (precision) {\n        precision = precision || 6;\n        return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\n    };\n    return LatLng;\n}());\nexport { LatLng };\nvar LatLngBounds = /** @class */ (function () {\n    function LatLngBounds(points) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).LatLngBounds(points);\n    }\n    LatLngBounds.prototype.toString = function () { return cordovaInstance(this, \"toString\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.toUrlValue = function (precision) { return cordovaInstance(this, \"toUrlValue\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.extend = function (LatLng) { return cordovaInstance(this, \"extend\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.contains = function (LatLng) { return cordovaInstance(this, \"contains\", { \"sync\": true }, arguments); };\n    LatLngBounds.prototype.getCenter = function () { return cordovaInstance(this, \"getCenter\", { \"sync\": true }, arguments); };\n    Object.defineProperty(LatLngBounds.prototype, \"northeast\", {\n        get: function () { return instancePropertyGet(this, \"northeast\"); },\n        set: function (value) { instancePropertySet(this, \"northeast\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LatLngBounds.prototype, \"southwest\", {\n        get: function () { return instancePropertyGet(this, \"southwest\"); },\n        set: function (value) { instancePropertySet(this, \"southwest\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LatLngBounds.prototype, \"type\", {\n        get: function () { return instancePropertyGet(this, \"type\"); },\n        set: function (value) { instancePropertySet(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    return LatLngBounds;\n}());\nexport { LatLngBounds };\nexport var TrafficModelId = {\n    BEST_GUESS: 'BEST_GUESS',\n    OPTIMISTIC: 'OPTIMISTIC',\n    PESSIMISTIC: 'PESSIMISTIC'\n};\nexport var TransitModeId = {\n    BUS: 'BUS',\n    RAIL: 'RAIL',\n    SUBWAY: 'SUBWAY',\n    TRAIN: 'TRAIN',\n    TRAM: 'TRAM'\n};\nexport var TransitRoutePreferenceId = {\n    FEWER_TRANSFERS: 'FEWER_TRANSFERS',\n    LESS_WALKING: 'LESS_WALKING'\n};\nexport var UnitSystemId = {\n    IMPERIAL: 'IMPERIAL',\n    METRIC: 'METRIC'\n};\nexport var TravelModeId = {\n    BICYCLING: 'BICYCLING',\n    DRIVING: 'DRIVING',\n    TRANSIT: 'TRANSIT',\n    WALKING: 'WALKING'\n};\nexport var VehicleTypeId = {\n    BUS: 'BUS',\n    CABLE_CAR: 'CABLE_CAR',\n    COMMUTER_TRAIN: 'COMMUTER_TRAIN',\n    FERRY: 'FERRY',\n    FUNICULAR: 'FUNICULAR',\n    GONDOLA_LIFT: 'GONDOLA_LIFT',\n    HEAVY_RAIL: 'HEAVY_RAIL',\n    HIGH_SPEED_TRAIN: 'HIGH_SPEED_TRAIN',\n    INTERCITY_BUS: 'INTERCITY_BUS',\n    METRO_RAIL: 'METRO_RAIL',\n    MONORAIL: 'MONORAIL',\n    OTHER: 'OTHER',\n    RAIL: 'RAIL',\n    SHARE_TAXI: 'SHARE_TAXI',\n    SUBWAY: 'SUBWAY',\n    TRAM: 'TRAM',\n    TROLLEYBUS: 'TROLLEYBUS'\n};\nvar VisibleRegion = /** @class */ (function () {\n    function VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight);\n    }\n    VisibleRegion.prototype.toString = function () { return cordovaInstance(this, \"toString\", { \"sync\": true }, arguments); };\n    VisibleRegion.prototype.toUrlValue = function (precision) { return cordovaInstance(this, \"toUrlValue\", { \"sync\": true }, arguments); };\n    VisibleRegion.prototype.contains = function (LatLng) { return cordovaInstance(this, \"contains\", { \"sync\": true }, arguments); };\n    Object.defineProperty(VisibleRegion.prototype, \"northeast\", {\n        get: function () { return instancePropertyGet(this, \"northeast\"); },\n        set: function (value) { instancePropertySet(this, \"northeast\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"southwest\", {\n        get: function () { return instancePropertyGet(this, \"southwest\"); },\n        set: function (value) { instancePropertySet(this, \"southwest\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"farLeft\", {\n        get: function () { return instancePropertyGet(this, \"farLeft\"); },\n        set: function (value) { instancePropertySet(this, \"farLeft\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"farRight\", {\n        get: function () { return instancePropertyGet(this, \"farRight\"); },\n        set: function (value) { instancePropertySet(this, \"farRight\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"nearLeft\", {\n        get: function () { return instancePropertyGet(this, \"nearLeft\"); },\n        set: function (value) { instancePropertySet(this, \"nearLeft\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"nearRight\", {\n        get: function () { return instancePropertyGet(this, \"nearRight\"); },\n        set: function (value) { instancePropertySet(this, \"nearRight\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VisibleRegion.prototype, \"type\", {\n        get: function () { return instancePropertyGet(this, \"type\"); },\n        set: function (value) { instancePropertySet(this, \"type\", value); },\n        enumerable: true,\n        configurable: true\n    });\n    return VisibleRegion;\n}());\nexport { VisibleRegion };\n/**\n * @hidden\n */\nexport var StreetViewSource = {\n    DEFAULT: 'DEFAULT',\n    OUTDOOR: 'OUTDOOR'\n};\n/**\n * @hidden\n * You can listen to these events where appropriate\n */\nexport var GoogleMapsEvent = {\n    MAP_READY: 'map_ready',\n    MAP_CLICK: 'map_click',\n    MAP_LONG_CLICK: 'map_long_click',\n    POI_CLICK: 'poi_click',\n    MY_LOCATION_CLICK: 'my_location_click',\n    MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\n    INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\n    INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\n    CAMERA_MOVE_START: 'camera_move_start',\n    CAMERA_MOVE: 'camera_move',\n    CAMERA_MOVE_END: 'camera_move_end',\n    OVERLAY_CLICK: 'overlay_click',\n    POLYGON_CLICK: 'polygon_click',\n    POLYLINE_CLICK: 'polyline_click',\n    CIRCLE_CLICK: 'circle_click',\n    GROUND_OVERLAY_CLICK: 'groundoverlay_click',\n    INFO_CLICK: 'info_click',\n    INFO_LONG_CLICK: 'info_long_click',\n    INFO_CLOSE: 'info_close',\n    INFO_OPEN: 'info_open',\n    MARKER_CLICK: 'marker_click',\n    MARKER_DRAG: 'marker_drag',\n    MARKER_DRAG_START: 'marker_drag_start',\n    MARKER_DRAG_END: 'marker_drag_end',\n    MAP_DRAG: 'map_drag',\n    MAP_DRAG_START: 'map_drag_start',\n    MAP_DRAG_END: 'map_drag_end',\n    KML_CLICK: 'kml_click',\n    PANORAMA_READY: 'panorama_ready',\n    PANORAMA_CAMERA_CHANGE: 'panorama_camera_change',\n    PANORAMA_LOCATION_CHANGE: 'panorama_location_change',\n    PANORAMA_CLICK: 'panorama_click',\n    DIRECTIONS_CHANGED: 'directions_changed'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsAnimation = {\n    BOUNCE: 'BOUNCE',\n    DROP: 'DROP'\n};\nexport var AnimationId = {\n    BOUNCE: 'BOUNCE',\n    DROP: 'DROP'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsMapTypeId = {\n    NORMAL: 'MAP_TYPE_NORMAL',\n    ROADMAP: 'MAP_TYPE_NORMAL',\n    SATELLITE: 'MAP_TYPE_SATELLITE',\n    HYBRID: 'MAP_TYPE_HYBRID',\n    TERRAIN: 'MAP_TYPE_TERRAIN',\n    NONE: 'MAP_TYPE_NONE'\n};\nexport var MapTypeId = {\n    NORMAL: 'MAP_TYPE_NORMAL',\n    ROADMAP: 'MAP_TYPE_NORMAL',\n    SATELLITE: 'MAP_TYPE_SATELLITE',\n    HYBRID: 'MAP_TYPE_HYBRID',\n    TERRAIN: 'MAP_TYPE_TERRAIN',\n    NONE: 'MAP_TYPE_NONE'\n};\nvar GoogleMaps = /** @class */ (function (_super) {\n    __extends(GoogleMaps, _super);\n    function GoogleMaps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a new GoogleMap instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {GoogleMapOptions} [options] Options\n     * @return {GoogleMap}\n     */\n    GoogleMaps.create = function (element, options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            else if (typeof element === 'object') {\n                options = element;\n                element = null;\n            }\n            var googleMap = new GoogleMap(element, options);\n            googleMap.set('_overlays', {});\n            return googleMap;\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginMapId') && target.__pluginMapId === undefined;\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    /**\n     * @deprecation keep this for backward compatibility.\n     * @hidden\n     */\n    GoogleMaps.prototype.create = function (element, options) {\n        console.error('GoogleMaps', '[deprecated] Please use GoogleMaps.create()');\n        return GoogleMaps.create(element, options);\n    };\n    /**\n     * Creates a new StreetView instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {StreetViewOptions} [options] Options\n     * @return {StreetViewPanorama}\n     */\n    GoogleMaps.createPanorama = function (element, options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            return new StreetViewPanorama(element, options);\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginMapId') && target.__pluginMapId === undefined;\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    GoogleMaps.pluginName = \"GoogleMaps\";\n    GoogleMaps.pluginRef = \"plugin.google.maps\";\n    GoogleMaps.plugin = \"cordova-plugin-googlemaps\";\n    GoogleMaps.repo = \"https://github.com/mapsplugin/cordova-plugin-googlemaps\";\n    GoogleMaps.document = \"https://ionicframework.com/docs/native/google-maps/\";\n    GoogleMaps.install = \"ionic cordova plugin add cordova-plugin-googlemaps\";\n    GoogleMaps.platforms = [\"Android\", \"iOS\", \"Browser\"];\n    GoogleMaps = __decorate([], GoogleMaps);\n    return GoogleMaps;\n}(IonicNativePlugin));\nexport { GoogleMaps };\nvar displayErrorMessage = function (element, message) {\n    var errorDiv = document.createElement('div');\n    errorDiv.innerHTML = message;\n    errorDiv.style.color = 'red';\n    errorDiv.style.position = 'absolute';\n    errorDiv.style.width = '80%';\n    errorDiv.style.height = '50%';\n    errorDiv.style.top = '0px';\n    errorDiv.style.bottom = '0px';\n    errorDiv.style.right = '0px';\n    errorDiv.style.left = '0px';\n    errorDiv.style.padding = '0px';\n    errorDiv.style.margin = 'auto';\n    element.style.position = 'relative';\n    element.style.backgroundColor = '#ccc7';\n    element.appendChild(errorDiv);\n};\nvar ɵ0 = displayErrorMessage;\nvar normalizeArgumentsOfEventListener = function (_objectInstance, args) {\n    if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n        if (args[args.length - 1].type === 'Map' || args[args.length - 1].type === 'StreetViewPanorama') {\n            args[args.length - 1] = _this;\n        }\n        else if (_objectInstance.__pgmId.indexOf('markercluster_') !== -1) {\n            var _overlays = _objectInstance.getMap().get('_overlays') || {};\n            var overlay = _overlays[args[args.length - 1].getId()];\n            if (!overlay) {\n                var markerJS = args[args.length - 1];\n                var markerId_1 = markerJS.getId();\n                var markerCluster = _objectInstance;\n                overlay = new Marker(markerCluster.getMap(), markerJS);\n                _objectInstance.getMap().get('_overlays')[markerId_1] = overlay;\n                markerJS.one(markerJS.getId() + '_remove', function () {\n                    _objectInstance.getMap().get('_overlays')[markerId_1] = null;\n                    delete _objectInstance.getMap().get('_overlays')[markerId_1];\n                });\n            }\n            args[args.length - 1] = overlay;\n        }\n        else {\n            args[args.length - 1] = _objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n        }\n    }\n    return args;\n};\nvar ɵ1 = normalizeArgumentsOfEventListener;\nvar BaseClass = /** @class */ (function () {\n    function BaseClass(objInstance) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (!objInstance) {\n                objInstance = new (GoogleMaps.getPlugin().BaseClass)();\n            }\n            this._objectInstance = objInstance;\n        }\n        else {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before executing any methods.');\n        }\n    }\n    BaseClass.prototype.addEventListener = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return new Observable(function (observer) {\n                    _this._objectInstance.addEventListener(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        observer.next(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.addEventListenerOnce = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve) {\n                    _this._objectInstance.one(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        resolve(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.addListenerOnce = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                console.warn('[GoogleMaps] \"addListenerOnce\" is deprecated. Please use \"addEventListenerOnce\".');\n                return _this.addEventListenerOnce(eventName);\n            }\n        })();\n    };\n    BaseClass.prototype.get = function (key) { return cordovaInstance(this, \"get\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.set = function (key, value, noNotify) { return cordovaInstance(this, \"set\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.bindTo = function (key, target, targetKey, noNotify) { return cordovaInstance(this, \"bindTo\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.on = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return new Observable(function (observer) {\n                    _this._objectInstance.on(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        observer.next(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.one = function (eventName) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve) {\n                    _this._objectInstance.one(eventName, function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                        resolve(newArgs);\n                    });\n                });\n            }\n        })();\n    };\n    BaseClass.prototype.hasEventListener = function () { return cordovaInstance(this, \"hasEventListener\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.empty = function () { return cordovaInstance(this, \"empty\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.trigger = function (eventName) {\n        var parameters = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parameters[_i - 1] = arguments[_i];\n        }\n        return cordovaInstance(this, \"trigger\", { \"sync\": true }, arguments);\n    };\n    BaseClass.prototype.destroy = function () { return cordovaInstance(this, \"destroy\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.removeEventListener = function (eventName, listener) { return cordovaInstance(this, \"removeEventListener\", { \"sync\": true }, arguments); };\n    BaseClass.prototype.off = function (eventName, listener) { return cordovaInstance(this, \"off\", { \"sync\": true }, arguments); };\n    BaseClass.plugin = \"cordova-plugin-googlemaps\";\n    BaseClass.pluginName = \"GoogleMaps\";\n    BaseClass.pluginRef = \"plugin.google.maps.BaseClass\";\n    BaseClass.repo = \"\";\n    BaseClass = __decorate([\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseClass);\n    return BaseClass;\n}());\nexport { BaseClass };\nvar BaseArrayClass = /** @class */ (function (_super) {\n    __extends(BaseArrayClass, _super);\n    function BaseArrayClass(initialData) {\n        var _this = this;\n        if (initialData instanceof GoogleMaps.getPlugin().BaseArrayClass) {\n            _this = _super.call(this, initialData) || this;\n        }\n        else if (Array.isArray(initialData)) {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)(initialData)) || this;\n        }\n        else {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)([])) || this;\n        }\n        return _this;\n    }\n    BaseArrayClass.prototype.empty = function (noNotify) { return cordovaInstance(this, \"empty\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.forEach = function (fn) { return cordovaInstance(this, \"forEach\", { \"sync\": true }, arguments); };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     * @return {Promise<void>}\n     */\n    BaseArrayClass.prototype.forEachAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.forEach(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.map = function (fn) { return cordovaInstance(this, \"map\", { \"sync\": true }, arguments); };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.map(fn, resolve);\n        });\n    };\n    /**\n     * Same as `mapAsync`, but keep the execution order\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    BaseArrayClass.prototype.mapSeries = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.mapSeries(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.filter = function (fn) { return cordovaInstance(this, \"filter\", { \"sync\": true }, arguments); };\n    /**\n     * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<T[]>} returns a new filtered array\n     */\n    BaseArrayClass.prototype.filterAsync = function (fn) {\n        var _this = this;\n        return getPromise(function (resolve) {\n            _this._objectInstance.filter(fn, resolve);\n        });\n    };\n    BaseArrayClass.prototype.getArray = function () { return cordovaInstance(this, \"getArray\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.getAt = function (index) { return cordovaInstance(this, \"getAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.getLength = function () { return cordovaInstance(this, \"getLength\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.indexOf = function (element) { return cordovaInstance(this, \"indexOf\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.reverse = function () { return cordovaInstance(this, \"reverse\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.sort = function () { return cordovaInstance(this, \"sort\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.insertAt = function (index, element, noNotify) { return cordovaInstance(this, \"insertAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.pop = function (noNotify) { return cordovaInstance(this, \"pop\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.push = function (element, noNotify) { return cordovaInstance(this, \"push\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.removeAt = function (index, noNotify) { return cordovaInstance(this, \"removeAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.prototype.setAt = function (index, element, noNotify) { return cordovaInstance(this, \"setAt\", { \"sync\": true }, arguments); };\n    BaseArrayClass.pluginName = \"BaseArrayClass\";\n    BaseArrayClass.plugin = \"cordova-plugin-googlemaps\";\n    BaseArrayClass.pluginRef = \"plugin.google.maps.BaseArrayClass\";\n    BaseArrayClass = __decorate([\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseArrayClass);\n    return BaseArrayClass;\n}(BaseClass));\nexport { BaseArrayClass };\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    function Circle(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Circle.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Circle.prototype.getMap = function () {\n        return this._map;\n    };\n    Circle.prototype.setCenter = function (latLng) { return cordovaInstance(this, \"setCenter\", { \"sync\": true }, arguments); };\n    Circle.prototype.getCenter = function () { return cordovaInstance(this, \"getCenter\", { \"sync\": true }, arguments); };\n    Circle.prototype.getRadius = function () { return cordovaInstance(this, \"getRadius\", { \"sync\": true }, arguments); };\n    Circle.prototype.setRadius = function (radius) { return cordovaInstance(this, \"setRadius\", { \"sync\": true }, arguments); };\n    Circle.prototype.setFillColor = function (color) { return cordovaInstance(this, \"setFillColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.getFillColor = function () { return cordovaInstance(this, \"getFillColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Circle.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Circle.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Circle.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Circle.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Circle.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Circle.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Circle.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Circle.prototype.getBounds = function () { return cordovaInstance(this, \"getBounds\", { \"sync\": true }, arguments); };\n    Circle.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Circle.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    return Circle;\n}(BaseClass));\nexport { Circle };\nvar Environment = /** @class */ (function () {\n    function Environment() {\n    }\n    /**\n     * Set environment variables.\n     */\n    Environment.setEnv = function (envOptions) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setEnv(envOptions);\n    };\n    /**\n     * Get the open source software license information for Google Maps SDK for iOS.\n     * @return {Promise<any>}\n     */\n    Environment.getLicenseInfo = function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve) {\n            GoogleMaps.getPlugin().environment.getLicenseInfo(function (text) { return resolve(text); });\n        });\n    };\n    /**\n     * Specifies the background color of the app.\n     * @param color\n     */\n    Environment.setBackgroundColor = function (color) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setBackgroundColor(color);\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.getLicenseInfo()\n     * @hidden\n     */\n    Environment.prototype.getLicenseInfo = function () {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.getLicenseInfo()');\n        return Environment.getLicenseInfo();\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.setBackgroundColor()\n     * @hidden\n     */\n    Environment.prototype.setBackgroundColor = function (color) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.setBackgroundColor()');\n        Environment.setBackgroundColor(color);\n    };\n    Environment.plugin = \"cordova-plugin-googlemaps\";\n    Environment.pluginName = \"GoogleMaps\";\n    Environment.pluginRef = \"plugin.google.maps.environment\";\n    Environment.repo = \"\";\n    Environment = __decorate([], Environment);\n    return Environment;\n}());\nexport { Environment };\nvar Geocoder = /** @class */ (function () {\n    function Geocoder() {\n    }\n    /**\n     * @deprecation This method is static. Please use Geocoder.geocode()\n     * @hidden\n     */\n    Geocoder.prototype.geocode = function (request) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Geocoder.geocode()');\n        return Geocoder.geocode(request);\n    };\n    /**\n     * Converts position to address and vice versa\n     * @param {GeocoderRequest} request Request object with either an address or a position\n     * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n     */\n    Geocoder.geocode = function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        if (request.address instanceof Array || Array.isArray(request.address) ||\n            request.position instanceof Array || Array.isArray(request.position)) {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: [\n            //    \"Kyoto, Japan\",\n            //    \"Tokyo, Japan\"\n            //   ]\n            // })\n            // -------------------------\n            return getPromise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (mvcArray) {\n                    if (mvcArray) {\n                        resolve(new BaseArrayClass(mvcArray));\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n        else {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: \"Kyoto, Japan\"\n            // })\n            // -------------------------\n            return getPromise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (results) {\n                    if (results) {\n                        resolve(results);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n    };\n    Geocoder.pluginName = \"GoogleMaps\";\n    Geocoder.pluginRef = \"plugin.google.maps.Geocoder\";\n    Geocoder.plugin = \"cordova-plugin-googlemaps\";\n    Geocoder.repo = \"\";\n    Geocoder = __decorate([], Geocoder);\n    return Geocoder;\n}());\nexport { Geocoder };\nvar DirectionsService = /** @class */ (function () {\n    function DirectionsService() {\n    }\n    /**\n     * A service for computing directions between two or more places.\n     * @param {DirectionsRequest} request\n     * @return {Promise<DirectionsResult>}\n     */\n    DirectionsService.route = function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().DirectionsService.route(request, resolve, reject);\n        });\n    };\n    DirectionsService.pluginName = \"GoogleMaps\";\n    DirectionsService.pluginRef = \"plugin.google.maps.DirectionsService\";\n    DirectionsService.plugin = \"cordova-plugin-googlemaps\";\n    DirectionsService.repo = \"\";\n    DirectionsService = __decorate([], DirectionsService);\n    return DirectionsService;\n}());\nexport { DirectionsService };\nvar ElevationService = /** @class */ (function () {\n    function ElevationService() {\n    }\n    /**\n     * Makes an elevation request along a path, where the elevation data are returned as distance-based samples along that path.\n     * @param {PathElevationRequest} request\n     * @return {Promise<ElevationResult[]>}\n     */\n    ElevationService.getElevationAlongPath = function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().ElevationService.getElevationAlongPath(request, resolve, reject);\n        });\n    };\n    /**\n     * Makes an elevation request for a list of discrete locations.\n     * @param {LocationElevationRequest} request\n     * @return {Promise<ElevationResult[]>}\n     */\n    ElevationService.getElevationForLocations = function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().ElevationService.getElevationForLocations(request, resolve, reject);\n        });\n    };\n    ElevationService.pluginName = \"GoogleMaps\";\n    ElevationService.pluginRef = \"plugin.google.maps.ElevationService\";\n    ElevationService.plugin = \"cordova-plugin-googlemaps\";\n    ElevationService.repo = \"\";\n    ElevationService = __decorate([], ElevationService);\n    return ElevationService;\n}());\nexport { ElevationService };\nvar LocationService = /** @class */ (function () {\n    function LocationService() {\n    }\n    /**\n     * Get the current device location without map\n     * @return {Promise<MyLocation>}\n     */\n    LocationService.getMyLocation = function (options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.getMyLocation(options, resolve, reject);\n        });\n    };\n    /**\n     * Return true if the application has geolocation permission\n     * @return {Promise<boolean>}\n     */\n    LocationService.hasPermission = function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return getPromise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.hasPermission(resolve, reject);\n        });\n    };\n    LocationService.pluginName = \"GoogleMaps\";\n    LocationService.pluginRef = \"plugin.google.maps.LocationService\";\n    LocationService.plugin = \"cordova-plugin-googlemaps\";\n    LocationService.repo = \"\";\n    LocationService = __decorate([], LocationService);\n    return LocationService;\n}());\nexport { LocationService };\nvar Encoding = /** @class */ (function () {\n    function Encoding() {\n    }\n    /**\n     * Decodes an encoded path string into a sequence of LatLngs.\n     * @param encoded {string} an encoded path string\n     * @param precision? {number} default: 5\n     * @return {LatLng}\n     */\n    Encoding.decodePath = function (encoded, precision) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.encoding.decodePath(encoded, precision);\n    };\n    /**\n     * Encodes a sequence of LatLngs into an encoded path string.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n     * @return {string}\n     */\n    Encoding.encodePath = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.encoding.encodePath(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.decodePath()\n     * @hidden\n     */\n    Encoding.prototype.decodePath = function (encoded, precision) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.decodePath()');\n        return Encoding.decodePath(encoded, precision);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.encodePath()\n     * @hidden\n     */\n    Encoding.prototype.encodePath = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.encodePath()');\n        return Encoding.encodePath(path);\n    };\n    Encoding.pluginName = \"GoogleMaps\";\n    Encoding.pluginRef = \"plugin.google.maps.geometry.encoding\";\n    Encoding.plugin = \"cordova-plugin-googlemaps\";\n    Encoding.repo = \"\";\n    Encoding = __decorate([], Encoding);\n    return Encoding;\n}());\nexport { Encoding };\nvar Poly = /** @class */ (function () {\n    function Poly() {\n    }\n    /**\n     * Returns true if the specified location is in the polygon path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.containsLocation = function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.containsLocation(location, path);\n    };\n    /**\n     * Returns true if the specified location is on the polyline path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    Poly.isLocationOnEdge = function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.isLocationOnEdge(location, path);\n    };\n    Poly.pluginName = \"GoogleMaps\";\n    Poly.pluginRef = \"plugin.google.maps.geometry.poly\";\n    Poly.plugin = \"cordova-plugin-googlemaps\";\n    Poly.repo = \"\";\n    Poly = __decorate([], Poly);\n    return Poly;\n}());\nexport { Poly };\nvar Spherical = /** @class */ (function () {\n    function Spherical() {\n    }\n    /**\n     * Returns the distance, in meters, between two LatLngs.\n     * @param locationA {ILatLng}\n     * @param locationB {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeDistanceBetween = function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n     * @param from {ILatLng}\n     * @param distance {number}\n     * @param heading {number}\n     * @return {LatLng}\n     */\n    Spherical.computeOffset = function (from, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n     * @param to {ILatLng} The destination LatLng.\n     * @param distance {number} The distance travelled, in meters.\n     * @param heading {number} The heading in degrees clockwise from north.\n     * @return {LatLng}\n     */\n    Spherical.computeOffsetOrigin = function (to, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * Returns the length of the given path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n     * @return {number}\n     */\n    Spherical.computeLength = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the area of a closed path. The computed area uses the same units as the radius.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeArea = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    Spherical.computeSignedArea = function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeSignedArea(path);\n    };\n    /**\n     * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n     * @param from {ILatLng}\n     * @param to {ILatLng}\n     * @return {number}\n     */\n    Spherical.computeHeading = function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeHeading(from, to);\n    };\n    /**\n     * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n     * @param from {ILatLng}     The LatLng from which to start.\n     * @param to {ILatLng}       The LatLng toward which to travel.\n     * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n     * @return {LatLng}\n     */\n    Spherical.interpolate = function (from, to, fraction) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.interpolate(from, to, fraction);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n     * @hidden\n     */\n    Spherical.prototype.computeDistanceBetween = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeDistanceBetween()');\n        return Spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffset()\n     * @hidden\n     */\n    Spherical.prototype.computeOffset = function (from, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffset()');\n        return Spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n     * @hidden\n     */\n    Spherical.prototype.computeOffsetOrigin = function (to, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffsetOrigin()');\n        return Spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeLength()\n     * @hidden\n     */\n    Spherical.prototype.computeLength = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeLength()');\n        return Spherical.computeLength(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeArea()\n     * @hidden\n     */\n    Spherical.prototype.computeArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeArea()');\n        return Spherical.computeArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeSignedArea()\n     * @hidden\n     */\n    Spherical.prototype.computeSignedArea = function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeSignedArea()');\n        return Spherical.computeSignedArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeHeading()\n     * @hidden\n     */\n    Spherical.prototype.computeHeading = function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeHeading()');\n        return Spherical.computeHeading(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.interpolate()\n     * @hidden\n     */\n    Spherical.prototype.interpolate = function (from, to, fraction) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.interpolate()');\n        return Spherical.interpolate(from, to, fraction);\n    };\n    Spherical.pluginName = \"GoogleMaps\";\n    Spherical.pluginRef = \"plugin.google.maps.geometry.spherical\";\n    Spherical.plugin = \"cordova-plugin-googlemaps\";\n    Spherical.repo = \"\";\n    Spherical = __decorate([], Spherical);\n    return Spherical;\n}());\nexport { Spherical };\nvar StreetViewPanorama = /** @class */ (function (_super) {\n    __extends(StreetViewPanorama, _super);\n    function StreetViewPanorama(element, options) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // -------------------\n            // Create a panorama\n            // -------------------\n            if (element instanceof HTMLElement) {\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(getPromise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginMapId') && target.__pluginMapId === undefined;\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 40) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && (targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100)) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            if (targets.length > 1) {\n                                reject(new Error('There are multiple \"' + element + '\" elements. Use different id to prevent error.'));\n                            }\n                            else {\n                                reject(new Error('Can not find the element [#' + element + ']'));\n                            }\n                        }\n                    }, 100);\n                }), options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginMapId') && target.__pluginMapId === undefined;\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n        return _this;\n    }\n    StreetViewPanorama.prototype.setPov = function (pov) { return cordovaInstance(this, \"setPov\", {}, arguments); };\n    StreetViewPanorama.prototype.setPosition = function (cameraPosition) { return cordovaInstance(this, \"setPosition\", {}, arguments); };\n    StreetViewPanorama.prototype.setPanningGesturesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setPanningGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPanningGesturesEnabled = function () { return cordovaInstance(this, \"getPanningGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setZoomGesturesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setZoomGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getZoomGesturesEnabled = function () { return cordovaInstance(this, \"getZoomGesturesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setStreetNamesEnabled = function (gestureEnable) { return cordovaInstance(this, \"setStreetNamesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getStreetNamesEnabled = function () { return cordovaInstance(this, \"getStreetNamesEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.setNavigationEnabled = function (gestureEnable) { return cordovaInstance(this, \"setNavigationEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getNavigationEnabled = function () { return cordovaInstance(this, \"getNavigationEnabled\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getLinks = function () { return cordovaInstance(this, \"getLinks\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getLocation = function () { return cordovaInstance(this, \"getLocation\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPanoId = function () { return cordovaInstance(this, \"getPanoId\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.getPosition = function () { return cordovaInstance(this, \"getPosition\", { \"sync\": true }, arguments); };\n    StreetViewPanorama.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    var _a, _b;\n    StreetViewPanorama.pluginName = \"StreetViewPanorama\";\n    StreetViewPanorama.plugin = \"cordova-plugin-googlemaps\";\n    StreetViewPanorama = __decorate([\n        __metadata(\"design:paramtypes\", [Object, typeof (_b = typeof StreetViewOptions !== \"undefined\" && StreetViewOptions) === \"function\" ? _b : Object])\n    ], StreetViewPanorama);\n    return StreetViewPanorama;\n}(BaseClass));\nexport { StreetViewPanorama };\nvar GoogleMap = /** @class */ (function (_super) {\n    __extends(GoogleMap, _super);\n    function GoogleMap(element, options, __timeout) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // ---------------\n            // Create a map\n            // ---------------\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(getPromise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginMapId') && target.__pluginMapId === undefined;\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 40) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && (targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100)) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            if (targets.length > 1) {\n                                reject(new Error('There are multiple \"' + element + '\" elements. Use different id to prevent error.'));\n                            }\n                            else {\n                                reject(new Error('Can not find the element [#' + element + ']'));\n                            }\n                        }\n                    }, __timeout == null ? 100 : __timeout);\n                }), options)) || this;\n            }\n            else if (element === null && options) {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(null, options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            console.error(errorMessage.join(''));\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginMapId') && target.__pluginMapId === undefined;\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n        }\n        return _this;\n    }\n    GoogleMap.prototype.setDiv = function (domNode) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                if (!domNode) {\n                    return _this._objectInstance.setDiv();\n                }\n                if (typeof domNode === 'string') {\n                    return (getPromise(function (resolve, reject) {\n                        var count;\n                        var i;\n                        count = 0;\n                        var timer = setInterval(function () {\n                            var targets;\n                            for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                                targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + domNode));\n                                if (targets.length > 0) {\n                                    targets = targets.filter(function (target) {\n                                        return !target.hasAttribute('__pluginMapId') && target.__pluginMapId === undefined;\n                                    });\n                                }\n                                if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                    clearInterval(timer);\n                                    resolve(targets[0]);\n                                    return;\n                                }\n                            }\n                            if (count++ < 40) {\n                                return;\n                            }\n                            clearInterval(timer);\n                            reject('Can not find [#' + domNode + '] element');\n                        }, 100);\n                        /*\n                        let i, targets: any[];\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                          targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + domNode));\n                          if (targets.length > 0) {\n                            targets = targets.filter((target) => {\n                              return !target.hasAttribute('__pluginMapId') && target.__pluginMapId === undefined;\n                            });\n                          }\n                          if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                            resolve(targets[0] as HTMLElement);\n                            return;\n                          }\n                \n                        }\n                        reject('Can not find [#' + domNode + '] element');\n                        */\n                    }))\n                        .then(function (element) {\n                        return _this._objectInstance.setDiv(element);\n                    });\n                }\n                else {\n                    if (domNode instanceof HTMLElement &&\n                        !domNode.offsetParent &&\n                        domNode.offsetWidth >= 100 && domNode.offsetHeight >= 100) {\n                        return _this._objectInstance.setDiv(domNode);\n                    }\n                    else {\n                        throw new Error(domNode.tagName + ' is too small. Must be bigger than 100x100.');\n                    }\n                }\n            }\n        })();\n    };\n    GoogleMap.prototype.getDiv = function () { return cordovaInstance(this, \"getDiv\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setMapTypeId = function (mapTypeId) { return cordovaInstance(this, \"setMapTypeId\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.animateCamera = function (cameraPosition) { return cordovaInstance(this, \"animateCamera\", {}, arguments); };\n    GoogleMap.prototype.animateCameraZoomIn = function () { return cordovaInstance(this, \"animateCameraZoomIn\", {}, arguments); };\n    GoogleMap.prototype.animateCameraZoomOut = function () { return cordovaInstance(this, \"animateCameraZoomOut\", {}, arguments); };\n    GoogleMap.prototype.moveCamera = function (cameraPosition) { return cordovaInstance(this, \"moveCamera\", {}, arguments); };\n    GoogleMap.prototype.moveCameraZoomIn = function () { return cordovaInstance(this, \"moveCameraZoomIn\", {}, arguments); };\n    GoogleMap.prototype.moveCameraZoomOut = function () { return cordovaInstance(this, \"moveCameraZoomOut\", {}, arguments); };\n    GoogleMap.prototype.getCameraPosition = function () { return cordovaInstance(this, \"getCameraPosition\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraTarget = function () { return cordovaInstance(this, \"getCameraTarget\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraZoom = function () { return cordovaInstance(this, \"getCameraZoom\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraBearing = function () { return cordovaInstance(this, \"getCameraBearing\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getCameraTilt = function () { return cordovaInstance(this, \"getCameraTilt\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraTarget = function (latLng) { return cordovaInstance(this, \"setCameraTarget\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraZoom = function (zoomLevel) { return cordovaInstance(this, \"setCameraZoom\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraTilt = function (tiltAngle) { return cordovaInstance(this, \"setCameraTilt\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCameraBearing = function (bearing) { return cordovaInstance(this, \"setCameraBearing\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.panBy = function (x, y) { return cordovaInstance(this, \"panBy\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getVisibleRegion = function () { return cordovaInstance(this, \"getVisibleRegion\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getMyLocation = function (options) { return cordovaInstance(this, \"getMyLocation\", {}, arguments); };\n    GoogleMap.prototype.setClickable = function (isClickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    GoogleMap.prototype.clear = function () {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                if (_this.get('_overlays')) {\n                    Object.keys(_this.get('_overlays')).forEach(function (overlayId) {\n                        _this.get('_overlays')[overlayId] = null;\n                        delete _this.get('_overlays')[overlayId];\n                    });\n                }\n                return getPromise(function (resolve) {\n                    _this._objectInstance.clear(function () { return resolve(); });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.fromLatLngToPoint = function (latLng) { return cordovaInstance(this, \"fromLatLngToPoint\", {}, arguments); };\n    GoogleMap.prototype.fromPointToLatLng = function (point) { return cordovaInstance(this, \"fromPointToLatLng\", {}, arguments); };\n    GoogleMap.prototype.setMyLocationEnabled = function (enabled) { return cordovaInstance(this, \"setMyLocationEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setMyLocationButtonEnabled = function (enabled) { return cordovaInstance(this, \"setMyLocationButtonEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.getFocusedBuilding = function () { return cordovaInstance(this, \"getFocusedBuilding\", {}, arguments); };\n    GoogleMap.prototype.setIndoorEnabled = function (enabled) { return cordovaInstance(this, \"setIndoorEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setTrafficEnabled = function (enabled) { return cordovaInstance(this, \"setTrafficEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setCompassEnabled = function (enabled) { return cordovaInstance(this, \"setCompassEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setAllGesturesEnabled = function (enabled) { return cordovaInstance(this, \"setAllGesturesEnabled\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setPadding = function (top, right, bottom, left) { return cordovaInstance(this, \"setPadding\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.setOptions = function (options) { return cordovaInstance(this, \"setOptions\", { \"sync\": true }, arguments); };\n    GoogleMap.prototype.addMarker = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addMarker(options, function (marker) {\n                        if (marker) {\n                            var overlayId_1 = marker.getId();\n                            var overlay_1 = new Marker(_this, marker);\n                            _this.get('_overlays')[overlayId_1] = overlay_1;\n                            marker.one(overlayId_1 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_1] = null;\n                                    overlay_1.destroy();\n                                }\n                            });\n                            resolve(overlay_1);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var marker = _this._objectInstance.addMarker(options);\n                var overlayId = marker.getId();\n                var overlay = new Marker(_this, marker);\n                _this.get('_overlays')[overlayId] = overlay;\n                marker.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerCluster = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addMarkerCluster(options, function (markerCluster) {\n                        if (markerCluster) {\n                            var overlayId_2 = markerCluster.getId();\n                            var overlay_2 = new MarkerCluster(_this, markerCluster);\n                            _this.get('_overlays')[overlayId_2] = overlay_2;\n                            markerCluster.one('remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_2] = null;\n                                    overlay_2.destroy();\n                                }\n                            });\n                            markerCluster.set('_overlays', new BaseArrayClass());\n                            resolve(overlay_2);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addMarkerClusterSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var markerCluster = _this._objectInstance.addMarkerCluster(options);\n                var overlayId = markerCluster.getId();\n                var overlay = new MarkerCluster(_this, markerCluster);\n                _this.get('_overlays')[overlayId] = overlay;\n                markerCluster.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                markerCluster.set('_overlays', new BaseArrayClass());\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addCircle = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addCircle(options, function (circle) {\n                        if (circle) {\n                            var overlayId_3 = circle.getId();\n                            var overlay_3 = new Circle(_this, circle);\n                            _this.get('_overlays')[overlayId_3] = overlay_3;\n                            circle.one(overlayId_3 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_3] = null;\n                                    overlay_3.destroy();\n                                }\n                            });\n                            resolve(overlay_3);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addCircleSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var circle = _this._objectInstance.addCircle(options);\n                var overlayId = circle.getId();\n                var overlay = new Circle(_this, circle);\n                _this.get('_overlays')[overlayId] = overlay;\n                circle.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolygon = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addPolygon(options, function (polygon) {\n                        if (polygon) {\n                            var overlayId_4 = polygon.getId();\n                            var overlay_4 = new Polygon(_this, polygon);\n                            _this.get('_overlays')[overlayId_4] = overlay_4;\n                            polygon.one(overlayId_4 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_4] = null;\n                                    overlay_4.destroy();\n                                }\n                            });\n                            resolve(overlay_4);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolygonSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var polygon = _this._objectInstance.addPolygon(options);\n                var overlayId = polygon.getId();\n                var overlay = new Polygon(_this, polygon);\n                _this.get('_overlays')[overlayId] = overlay;\n                polygon.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolyline = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addPolyline(options, function (polyline) {\n                        if (polyline) {\n                            var overlayId_5 = polyline.getId();\n                            var overlay_5 = new Polyline(_this, polyline);\n                            _this.get('_overlays')[overlayId_5] = overlay_5;\n                            polyline.one(overlayId_5 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_5] = null;\n                                    overlay_5.destroy();\n                                }\n                            });\n                            resolve(overlay_5);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addPolylineSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var polyline = _this._objectInstance.addPolyline(options);\n                var overlayId = polyline.getId();\n                var overlay = new Polyline(_this, polyline);\n                _this.get('_overlays')[overlayId] = overlay;\n                polyline.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addTileOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addTileOverlay(options, function (tileOverlay) {\n                        if (tileOverlay) {\n                            var overlayId_6 = tileOverlay.getId();\n                            var overlay_6 = new TileOverlay(_this, tileOverlay);\n                            _this.get('_overlays')[overlayId_6] = overlay_6;\n                            tileOverlay.one(overlayId_6 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_6] = null;\n                                    overlay_6.destroy();\n                                }\n                            });\n                            resolve(overlay_6);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addTileOverlaySync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var tileOverlay = _this._objectInstance.addTileOverlay(options);\n                var overlayId = tileOverlay.getId();\n                var overlay = new TileOverlay(_this, tileOverlay);\n                _this.get('_overlays')[overlayId] = overlay;\n                tileOverlay.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addGroundOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addGroundOverlay(options, function (groundOverlay) {\n                        if (groundOverlay) {\n                            var overlayId_7 = groundOverlay.getId();\n                            var overlay_7 = new GroundOverlay(_this, groundOverlay);\n                            _this.get('_overlays')[overlayId_7] = overlay_7;\n                            groundOverlay.one(overlayId_7 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_7] = null;\n                                    overlay_7.destroy();\n                                }\n                            });\n                            resolve(overlay_7);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addGroundOverlaySync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var groundOverlay = _this._objectInstance.addGroundOverlay(options);\n                var overlayId = groundOverlay.getId();\n                var overlay = new GroundOverlay(_this, groundOverlay);\n                _this.get('_overlays')[overlayId] = overlay;\n                groundOverlay.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.addKmlOverlay = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    _this._objectInstance.addKmlOverlay(options, function (kmlOverlay) {\n                        if (kmlOverlay) {\n                            var overlayId_8 = kmlOverlay.getId();\n                            var overlay_8 = new KmlOverlay(_this, kmlOverlay);\n                            _this.get('_overlays')[overlayId_8] = overlay_8;\n                            kmlOverlay.one(overlayId_8 + '_remove', function () {\n                                if (_this.get('_overlays')) {\n                                    _this.get('_overlays')[overlayId_8] = null;\n                                    overlay_8.destroy();\n                                }\n                            });\n                            resolve(overlay_8);\n                        }\n                        else {\n                            reject();\n                        }\n                    });\n                });\n            }\n        })();\n    };\n    GoogleMap.prototype.addDirectionsRendererSync = function (options) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                var directionsRenderer = _this._objectInstance.addDirectionsRenderer(options);\n                var overlayId = directionsRenderer.getId();\n                var overlay = new DirectionsRenderer(_this, directionsRenderer);\n                _this.get('_overlays')[overlayId] = overlay;\n                directionsRenderer.one(overlayId + '_remove', function () {\n                    if (_this.get('_overlays')) {\n                        _this.get('_overlays')[overlayId] = null;\n                        overlay.destroy();\n                    }\n                });\n                return overlay;\n            }\n        })();\n    };\n    GoogleMap.prototype.toDataURL = function (options) { return cordovaInstance(this, \"toDataURL\", {}, arguments); };\n    var _c, _d;\n    GoogleMap.pluginName = \"GoogleMaps\";\n    GoogleMap.plugin = \"cordova-plugin-googlemaps\";\n    GoogleMap = __decorate([\n        __metadata(\"design:paramtypes\", [Object, typeof (_d = typeof GoogleMapOptions !== \"undefined\" && GoogleMapOptions) === \"function\" ? _d : Object, Number])\n    ], GoogleMap);\n    return GoogleMap;\n}(BaseClass));\nexport { GoogleMap };\nvar GroundOverlay = /** @class */ (function (_super) {\n    __extends(GroundOverlay, _super);\n    function GroundOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    GroundOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    GroundOverlay.prototype.getMap = function () {\n        return this._map;\n    };\n    GroundOverlay.prototype.setBounds = function (bounds) { return cordovaInstance(this, \"setBounds\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setBearing = function (bearing) { return cordovaInstance(this, \"setBearing\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getBearing = function () { return cordovaInstance(this, \"getBearing\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setImage = function (imageUrl) { return cordovaInstance(this, \"setImage\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setOpacity = function (opacity) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.setZIndex = function (index) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    GroundOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return GroundOverlay;\n}(BaseClass));\nexport { GroundOverlay };\nvar HtmlInfoWindow = /** @class */ (function (_super) {\n    __extends(HtmlInfoWindow, _super);\n    function HtmlInfoWindow() {\n        return _super.call(this, new (GoogleMaps.getPlugin().HtmlInfoWindow)()) || this;\n    }\n    HtmlInfoWindow.prototype.setBackgroundColor = function (color) { return cordovaInstance(this, \"setBackgroundColor\", {}, arguments); };\n    HtmlInfoWindow.prototype.setContent = function (content, cssOptions) { return cordovaInstance(this, \"setContent\", {}, arguments); };\n    HtmlInfoWindow.prototype.open = function (marker) { return cordovaInstance(this, \"open\", {}, arguments); };\n    HtmlInfoWindow.prototype.close = function () { return cordovaInstance(this, \"close\", {}, arguments); };\n    HtmlInfoWindow.plugin = \"cordova-plugin-googlemaps\";\n    HtmlInfoWindow.pluginName = \"GoogleMaps\";\n    HtmlInfoWindow.pluginRef = \"plugin.google.maps.HtmlInfoWindow\";\n    HtmlInfoWindow.repo = \"\";\n    HtmlInfoWindow = __decorate([\n        __metadata(\"design:paramtypes\", [])\n    ], HtmlInfoWindow);\n    return HtmlInfoWindow;\n}(BaseClass));\nexport { HtmlInfoWindow };\nvar Marker = /** @class */ (function (_super) {\n    __extends(Marker, _super);\n    function Marker(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Marker.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Marker.prototype.getMap = function () {\n        return this._map;\n    };\n    Marker.prototype.setPosition = function (latLng) { return cordovaInstance(this, \"setPosition\", { \"sync\": true }, arguments); };\n    Marker.prototype.getPosition = function () { return cordovaInstance(this, \"getPosition\", { \"sync\": true }, arguments); };\n    Marker.prototype.showInfoWindow = function () { return cordovaInstance(this, \"showInfoWindow\", { \"sync\": true }, arguments); };\n    Marker.prototype.hideInfoWindow = function () { return cordovaInstance(this, \"hideInfoWindow\", { \"sync\": true }, arguments); };\n    Marker.prototype.setAnimation = function (animation) { return cordovaInstance(this, \"setAnimation\", { \"sync\": true }, arguments); };\n    Marker.prototype.setDisableAutoPan = function (disableAutoPan) { return cordovaInstance(this, \"setDisableAutoPan\", { \"sync\": true }, arguments); };\n    Marker.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Marker.prototype.isVisible = function () { return cordovaInstance(this, \"isVisible\", { \"sync\": true }, arguments); };\n    Marker.prototype.setTitle = function (title) { return cordovaInstance(this, \"setTitle\", { \"sync\": true }, arguments); };\n    Marker.prototype.getTitle = function () { return cordovaInstance(this, \"getTitle\", { \"sync\": true }, arguments); };\n    Marker.prototype.setSnippet = function (snippet) { return cordovaInstance(this, \"setSnippet\", { \"sync\": true }, arguments); };\n    Marker.prototype.getSnippet = function () { return cordovaInstance(this, \"getSnippet\", { \"sync\": true }, arguments); };\n    Marker.prototype.setOpacity = function (alpha) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    Marker.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    Marker.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Marker.prototype.setIconAnchor = function (x, y) { return cordovaInstance(this, \"setIconAnchor\", { \"sync\": true }, arguments); };\n    Marker.prototype.setInfoWindowAnchor = function (x, y) { return cordovaInstance(this, \"setInfoWindowAnchor\", { \"sync\": true }, arguments); };\n    Marker.prototype.isInfoWindowShown = function () { return cordovaInstance(this, \"isInfoWindowShown\", { \"sync\": true }, arguments); };\n    Marker.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Marker.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Marker.prototype.setDraggable = function (draggable) { return cordovaInstance(this, \"setDraggable\", { \"sync\": true }, arguments); };\n    Marker.prototype.isDraggable = function () { return cordovaInstance(this, \"isDraggable\", { \"sync\": true }, arguments); };\n    Marker.prototype.setFlat = function (flat) { return cordovaInstance(this, \"setFlat\", { \"sync\": true }, arguments); };\n    Marker.prototype.setIcon = function (icon) { return cordovaInstance(this, \"setIcon\", { \"sync\": true }, arguments); };\n    Marker.prototype.setRotation = function (rotation) { return cordovaInstance(this, \"setRotation\", { \"sync\": true }, arguments); };\n    Marker.prototype.getRotation = function () { return cordovaInstance(this, \"getRotation\", { \"sync\": true }, arguments); };\n    return Marker;\n}(BaseClass));\nexport { Marker };\nvar MarkerCluster = /** @class */ (function (_super) {\n    __extends(MarkerCluster, _super);\n    function MarkerCluster(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    MarkerCluster.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.addMarker = function (marker) { return cordovaInstance(this, \"addMarker\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.addMarkers = function (markers) { return cordovaInstance(this, \"addMarkers\", { \"sync\": true }, arguments); };\n    MarkerCluster.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    MarkerCluster.prototype.getMap = function () {\n        return this._map;\n    };\n    return MarkerCluster;\n}(BaseClass));\nexport { MarkerCluster };\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Polygon.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Polygon.prototype.getMap = function () {\n        return this._map;\n    };\n    Polygon.prototype.setPoints = function (points) { return cordovaInstance(this, \"setPoints\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polygon.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    Polygon.prototype.setHoles = function (holes) { return cordovaInstance(this, \"setHoles\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the holes.\n     * @return {BaseArrayClass<ILatLng[]>}\n     */\n    Polygon.prototype.getHoles = function () {\n        var holes = this._objectInstance.getPoints();\n        var results = new BaseArrayClass();\n        holes.forEach(function (hole) {\n            results.push(hole);\n        });\n        return results;\n    };\n    Polygon.prototype.setFillColor = function (fillColor) { return cordovaInstance(this, \"setFillColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getFillColor = function () { return cordovaInstance(this, \"getFillColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Polygon.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    Polygon.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Polygon.prototype.setGeodesic = function (geodesic) { return cordovaInstance(this, \"setGeodesic\", { \"sync\": true }, arguments); };\n    Polygon.prototype.getGeodesic = function () { return cordovaInstance(this, \"getGeodesic\", { \"sync\": true }, arguments); };\n    return Polygon;\n}(BaseClass));\nexport { Polygon };\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    function Polyline(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    Polyline.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    Polyline.prototype.getMap = function () {\n        return this._map;\n    };\n    Polyline.prototype.setPoints = function (points) { return cordovaInstance(this, \"setPoints\", { \"sync\": true }, arguments); };\n    /**\n     * Returns an instance of the BaseArrayClass\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    Polyline.prototype.getPoints = function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    Polyline.prototype.setGeoDesic = function (geoDesic) { return cordovaInstance(this, \"setGeoDesic\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getGeodesic = function () { return cordovaInstance(this, \"getGeodesic\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setStrokeColor = function (strokeColor) { return cordovaInstance(this, \"setStrokeColor\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getStrokeColor = function () { return cordovaInstance(this, \"getStrokeColor\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setStrokeWidth = function (strokeWidth) { return cordovaInstance(this, \"setStrokeWidth\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getStrokeWidth = function () { return cordovaInstance(this, \"getStrokeWidth\", { \"sync\": true }, arguments); };\n    Polyline.prototype.setZIndex = function (index) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    Polyline.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    Polyline.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return Polyline;\n}(BaseClass));\nexport { Polyline };\nvar TileOverlay = /** @class */ (function (_super) {\n    __extends(TileOverlay, _super);\n    function TileOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    TileOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    TileOverlay.prototype.getMap = function () {\n        return this._map;\n    };\n    TileOverlay.prototype.setFadeIn = function (fadeIn) { return cordovaInstance(this, \"setFadeIn\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getFadeIn = function () { return cordovaInstance(this, \"getFadeIn\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setZIndex = function (zIndex) { return cordovaInstance(this, \"setZIndex\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getZIndex = function () { return cordovaInstance(this, \"getZIndex\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setOpacity = function (opacity) { return cordovaInstance(this, \"setOpacity\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getOpacity = function () { return cordovaInstance(this, \"getOpacity\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.getTileSize = function () { return cordovaInstance(this, \"getTileSize\", { \"sync\": true }, arguments); };\n    TileOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return TileOverlay;\n}(BaseClass));\nexport { TileOverlay };\nvar KmlOverlay = /** @class */ (function (_super) {\n    __extends(KmlOverlay, _super);\n    function KmlOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        Object.defineProperty(self, 'camera', {\n            value: _this._objectInstance.camera,\n            writable: false\n        });\n        Object.defineProperty(self, 'kmlData', {\n            value: _this._objectInstance.kmlData,\n            writable: false\n        });\n        return _this;\n    }\n    KmlOverlay.prototype.getDefaultViewport = function () { return cordovaInstance(this, \"getDefaultViewport\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    KmlOverlay.prototype.getMap = function () { return this._map; };\n    KmlOverlay.prototype.setVisible = function (visible) { return cordovaInstance(this, \"setVisible\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getVisible = function () { return cordovaInstance(this, \"getVisible\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.setClickable = function (clickable) { return cordovaInstance(this, \"setClickable\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.getClickable = function () { return cordovaInstance(this, \"getClickable\", { \"sync\": true }, arguments); };\n    KmlOverlay.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return KmlOverlay;\n}(BaseClass));\nexport { KmlOverlay };\nvar DirectionsRenderer = /** @class */ (function (_super) {\n    __extends(DirectionsRenderer, _super);\n    function DirectionsRenderer(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    DirectionsRenderer.prototype.getId = function () { return cordovaInstance(this, \"getId\", { \"sync\": true }, arguments); };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    DirectionsRenderer.prototype.getMap = function () { return this._map; };\n    DirectionsRenderer.prototype.setOptions = function (options) { return cordovaInstance(this, \"setOptions\", { \"sync\": true }, arguments); };\n    DirectionsRenderer.prototype.setDirections = function (result) { return cordovaInstance(this, \"setDirections\", { \"sync\": true }, arguments); };\n    DirectionsRenderer.prototype.getRouteIndex = function () { return cordovaInstance(this, \"getRouteIndex\", { \"sync\": true }, arguments); };\n    DirectionsRenderer.prototype.getDirections = function () { return cordovaInstance(this, \"getDirections\", { \"sync\": true }, arguments); };\n    DirectionsRenderer.prototype.remove = function () { return cordovaInstance(this, \"remove\", {}, arguments); };\n    return DirectionsRenderer;\n}(BaseClass));\nexport { DirectionsRenderer };\nexport { ɵ0, ɵ1 };\n//# sourceMappingURL=data:application/json;base64,","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Device } from \"@ionic-native/device/ngx\";\nimport { Geolocation } from \"@ionic-native/geolocation/ngx\";\nimport {\n  Environment, GoogleMap,\n\n  GoogleMapOptions, GoogleMaps,\n\n  GoogleMapsEvent\n} from \"@ionic-native/google-maps/ngx\";\nimport { Platform } from \"@ionic/angular\";\nimport { Observable, Subject } from \"rxjs\";\nimport { Order } from 'src/app/interfaces/order';\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MapService {\n  public orders: Array<any>;\n  map: GoogleMap;\n  public infoUpdated = new Subject();\n  constructor(\n    private http: HttpClient,\n    private geo: Geolocation,\n    private device: Device,\n    private platform: Platform,\n    private router: Router\n  ) { }\n\n  public getWay(coords: { lt: number; lg: number }): Observable<any> {\n    const url =\n      \"http://mobile.postsrvs.ru:8080/https://mobile.postsrvs.ru/mobile/orders\";\n    let data = {\n      action: \"getWay\",\n      lt: coords?.lt,\n      lg: coords?.lg,\n      auto: 0,\n      mode: \"auto\",\n      uuid: this.device.uuid,\n    };\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-type\": \"application/json\",\n      }),\n    };\n    return this.http.post(url, data, httpOptions);\n  }\n\n  async attachMap(\n    divId: string,\n    options?: GoogleMapOptions\n  ): Promise<GoogleMap> {\n    options = options || {};\n\n    if (this.map) {\n      await new Promise((resolve) => {\n        const instance: any = setInterval(() => {\n          if (document.querySelectorAll(\"#\" + divId).length > 0) {\n            clearInterval(instance);\n            resolve();\n          }\n        }, 100);\n      });\n      await this.map.setDiv(divId);\n      await new Promise((resolve) => {\n        setTimeout(resolve, 100);\n      });\n      if (options) {\n        options.mapType = options.mapType;\n        await this.map.setOptions(options);\n      }\n    } else {\n      await this.platform.ready();\n      await this._loadMap(divId, options);\n    }\n    return Promise.resolve(this.map);\n  }\n\n  _loadMap(divId: string, options?: GoogleMapOptions) {\n    Environment.setEnv({\n      API_KEY_FOR_BROWSER_RELEASE: \"AIzaSyDSWxDW_twugay-5q2T3aEuER8Lph5d164\",\n      API_KEY_FOR_BROWSER_DEBUG: \"AIzaSyDSWxDW_twugay-5q2T3aEuER8Lph5d164\", // optional\n    });\n\n    let mapOptions: GoogleMapOptions = options || {};\n    this.map = GoogleMaps.create(divId, options);\n    return new Promise((resolve) => {\n      this.map.one(GoogleMapsEvent.MAP_READY).then(() => {\n        resolve();\n      });\n    });\n  }\n\n  detachMap() {\n    if (!this.map) return;\n    this.map.setDiv();\n    this.map.off();\n    this.map.setOptions({\n      camera: {\n        target: {\n          lat: 0,\n          lng: 0,\n        },\n        zoom: 1,\n        bearing: 0,\n        tilt: 0,\n        padding: 0,\n      },\n      gestures: {\n        scroll: true,\n        tilt: true,\n        rotate: true,\n        zoom: true,\n      },\n      controls: {\n        compass: true,\n        indoorPicker: true,\n        myLocationButton: true,\n        myLocation: true, // (blue dot)\n        zoom: true, // android only\n        mapToolbar: true,\n      },\n      preferences: {\n        zoom: null, // reset min,max zoom\n        building: true,\n        clickableIcons: false, // POI icons clickable = false\n        restriction: null, // reset restriction\n      },\n    });\n    this.map.clear();\n  }\n\n  orderDetails(orderId) {\n    console.log(\"sys:: переход на страницу заказа \", orderId);\n    this.router.navigate([\"/order\", orderId]);\n    localStorage.removeItem(\"needOrder\");\n  }\n\n  public navigate(page: any) {\n    this.router.navigate(page);\n  }\n\n  public showRoute(order: Order) {\n    const meta = {\n      label: 'showRouteToOrder',\n      order\n    };\n    this.infoUpdated.next(meta);\n    this.router.navigate(['map']);\n  }\n}\n"]}