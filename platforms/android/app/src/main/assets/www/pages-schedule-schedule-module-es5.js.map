{"version":3,"sources":["webpack:///src/app/pages/schedule/schedule-routing.module.ts","webpack:///src/app/pages/schedule/schedule.module.ts","webpack:///src/app/pages/schedule/schedule.page.html","webpack:///src/app/pages/schedule/schedule.page.ts"],"names":["routes","path","component","SchedulePageRoutingModule","forChild","imports","exports","SchedulePageModule","declarations","SchedulePage","alertController","sys","workDates","notWorkRules","nonWorkDates","getNotWorkRules","subscribe","data","workDate","el","value","replace","substr","onConfirm","push","datePresent","Date","presentAlertConfirm","date","presentAlertRadio","confirmNonWork","confirmHandler","index","create","cssClass","header","message","buttons","text","role","handler","blah","console","log","alert","present","presentAlertConfirmDel","delDate","splice","inputs","name","type","label","checked","reason","goToWork","success","presentToast","stopWork","addWorkDate","addNonWorkDate","selector","templateUrl","styleUrls"],"mappings":"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","file":"pages-schedule-schedule-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SchedulePage } from './schedule.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SchedulePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SchedulePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SchedulePageRoutingModule } from './schedule-routing.module';\n\nimport { SchedulePage } from './schedule.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SchedulePageRoutingModule\n  ],\n  declarations: [SchedulePage]\n})\nexport class SchedulePageModule {}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>График работы</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n<div class=\"schedule-area working\">\n  <h4>Добавить рабочие дни</h4>\n  <ion-text class=\"descr\">Выберите даты, в которые вы хотите выйти на работу</ion-text>\n  <ion-item lines=\"none\">\n    <ion-datetime display-format=\"DD.MM.YYYY HH:mm\" #workDate placeholder=\"DD.MM.YYYY HH:mm\"></ion-datetime>\n    <ion-button size=\"default\" fill=\"solid\" (click)=\"addWorkDate(workDate)\" class='confirm'>\n  <ion-icon name=\"checkmark-outline\"></ion-icon>\n</ion-button>\n</ion-item>\n<ion-list>\n  <ion-list-header>\n  <ion-label>Выбранные рабочие дни:</ion-label>\n</ion-list-header>\n<ul *ngFor=\"let date of workDates; index as i\">\n              <li>\n                {{date | date: 'd.MM.yyyy H:mm'}} \n                <ion-text class='del' (click)=\"delWorkDate(i, date)\">\n                  <a>\n                    удалить\n                  <ion-icon name=\"close\"></ion-icon>  \n                   </a>            \n                </ion-text>\n            </li>\n  </ul>\n\n</ion-list>\n  <ion-button (click)=\"goToWork()\" fill=\"solid\">\n    Сохранить\n  </ion-button>\n</div>\n<div class='schedule-area non-working'>\n    <h4>Добавить НЕрабочие дни</h4>\n  <ion-text class=\"descr\">\n    Выберите даты, в которые вы не можете выйти на работу и укажите причину\n  </ion-text>\n  <ion-item lines=\"none\">\n    <ion-datetime display-format=\"DD.MM.YYYY\" placeholder=\"DD.MM.YYYY\" #nonWorkDate></ion-datetime>\n    <ion-button size=\"default\" fill=\"solid\" (click)=\"addNonWorkDate(nonWorkDate)\" class='confirm'>\n      <ion-icon name=\"checkmark-outline\"></ion-icon>\n    </ion-button>\n  </ion-item>\n  <ion-list>\n    <ion-list-header>\n    <ion-label>Выбранные НЕрабочие дни:</ion-label>\n  </ion-list-header>\n  <ul *ngFor=\"let date of nonWorkDates; index as i\">\n      <li>\n        {{date.date | date: 'd.MM.yyyy'}} \n        <ion-text class='del' (click)=\"delNonWorkDate(i)\">\n          <a>\n            удалить\n          <ion-icon name=\"close\"></ion-icon>  \n            </a>            \n        </ion-text>\n    </li>\n    {{notWorkRules[date.reason]}}\n  </ul>\n          \n\n  </ion-list>\n    <ion-button (click)=\"stopWork()\" fill=\"solid\">\n   Сохранить\n  </ion-button>\n\n</div>\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { formatDate } from '@angular/common';\nimport { SysService } from 'src/app/services/sys.service';\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.page.html',\n  styleUrls: ['./schedule.page.scss'],\n})\nexport class SchedulePage implements OnInit {\n\n    public workDates: Array<string> = [];\n    public notWorkRules = {};\n    public nonWorkDates: Array<any> = [];\n\n  constructor(\n    public alertController: AlertController,\n    private sys: SysService\n    ) { }\n\n  ngOnInit() {\n    this.sys.getNotWorkRules().subscribe((data) => {\n      this.notWorkRules = data;\n    })\n  }\n    //Добавление рабочей даты курьера\n  public addWorkDate(workDate) {\n    workDate = workDate.el.value.replace('T', ' ').substr('', 19);\n    let onConfirm = ()=>{this.workDates.push(workDate)};\n    let datePresent:(Date|string) = new Date (workDate);\n    datePresent = formatDate(datePresent,'d.MM.yyyy','ru');\n    \n    this.presentAlertConfirm(datePresent, onConfirm);\n  }\n\n    //Добавление даты НЕ выхода на работу\n    public addNonWorkDate(date){\n      date = date.el.value.replace('T', ' ').substr('', 10);\n      let datePresent:(Date|string) = new Date (date);\n      datePresent = formatDate(datePresent,'d.MM.yyyy','ru');\n      this.presentAlertRadio(date, this.confirmNonWork);\n\n  }\n\n\nasync presentAlertConfirm(date: string, confirmHandler:any, index= '') {\n    const alert = await this.alertController.create({\n      cssClass: 'alert',\n      header: `Сделать ${date} рабочим днем?`,\n      message: `Подтвердив изменения,  ${date} станет рабочим днем`,\n      buttons: [\n        {\n          text: 'Отмена',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Подтвердить',\n          handler: () => {\n            confirmHandler(index);\n          }\n        }\n      ]\n    });\n     await alert.present();\n  }\n\n  public delWorkDate(index,date){\n    this.presentAlertConfirmDel(date, this.delDate, index)\n    \n  }\n    public delNonWorkDate(index){\n    this.nonWorkDates.splice(index,1);\n  }\n\n  async presentAlertRadio(date, confirmHandler:any) {\n    const alert = await this.alertController.create({\n      cssClass: 'non-work-alert',\n      header: `Укажите причину пропуска ${date}`,\n      message: `Подтвердив изменения,  ${date} станет нерабочим днем`,\n      inputs: [\n        {\n          name: 'radio1',\n          type: 'radio',\n          label: this.notWorkRules['1'],\n          value: '1',\n          checked: true\n        },\n        {\n          name: 'radio2',\n          type: 'radio',\n          label: this.notWorkRules['2'],\n          value: '2'\n        },\n        {\n          name: 'radio3',\n          type: 'radio',\n          label: this.notWorkRules['3'],\n          value: '3'\n        },\n        {\n          name: 'radio4',\n          type: 'radio',\n          label: this.notWorkRules['4'],\n          value: '4'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Отмена',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Подтвердить',\n          handler: (data) => {\n            \n            console.log('sys:: radio', data);\n            this.confirmNonWork(date ,data);\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  confirmNonWork(date,reason){\n    this.nonWorkDates.push({date, reason})\n  }\n\n  delDate(index){\n    this.workDates.splice(index,1);\n  }\n  async presentAlertConfirmDel(date: string, confirmHandler:any, index= '') {\n    const alert = await this.alertController.create({\n      cssClass: 'alertDel',\n      header: `Удалить рабочий день ${date}?`,\n      message: `Подтвердив удаление,  его нельзя отменить`,\n      buttons: [\n        {\n          text: 'Отмена',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Подтвердить',\n          handler: () => {\n            this.delDate(index);\n          }\n        }\n      ]\n    });\n     await alert.present();\n  }\n  public goToWork() {\n    this.sys.goToWork(this.workDates).subscribe((data: { success: boolean }) => {\n      console.log('sys:: gotoWork resp', data);\n      if (data.success) {\n        this.sys.presentToast('Рабочие часы записаны', 'success');\n      }\n\n    });\n  }\n  public stopWork() {\n    this.sys.stopWork(this.nonWorkDates).subscribe((data: { success: boolean }) => {\n      console.log('sys:: stopWork resp', data);\n      if (data.success) {\n        this.sys.presentToast('Нерабочие дни записаны', 'success');\n      }\n\n    });\n  }\n\n\n}\n"]}