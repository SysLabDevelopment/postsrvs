{"version":3,"sources":["webpack:///src/app/pages/courier/courier.module.ts","webpack:///src/app/pages/courier/courier.page.html","webpack:///src/app/pages/courier/courier.page.ts"],"names":["routes","path","component","CourierPageModule","provide","useFactory","forChild","imports","declarations","providers","$event","stopPropagation","CourierPage","courier","router","state$","auth","bs","vbr","settings","sys","data","popoverController","map","orderService","CL","orders","statuses","selectedTab","ordersInit","loader","local_stop$","localcheck","g_done","g_process","g_fail","lvl_ind","width","btn_go","notification","dragStarted","subBtnCond","scanView","scan_process","find_order","isWorkEnded","searchString","slicer","howSlice","callWindow","self","initContent","position","getValue","startRoute","state","pipe","subscribe","a","initConditions","ord","asObservable","prepareOrdersList","app_mode","getMode","confirmed","Drop_L","autoScrollDisabled","DragItems","changes","r","forEach","DragItem","dragStartDelay","touch","mouse","checkout","rules","storeCheckMode","checkState","localStorage","check","appMode","manual_route","count_orders","getScanMode","findOrder","scanInput","res","success","sumbitOrder","order_id","re_s","console","log","submitOrder","showError","order","confirm","setTimeout","scanSearch","scanInputStart","sInput","nativeElement","focus","scan","then","text","way","Array","Number","status_id","push","id","old_way","next","orders_page_check","changeRouteMode","vibrate","orders_data","getStatus","navigate","tab","index","obj","status","ordersInfo","i","length","String","start","stop","checkAuth","sendStartRoute","sync_id","cid","url","lt","lg","sendPost","result","selectOrder","endWork","presentToast","error","message","event","getApiData","add","target","complete","ids","value","orders_c","filter","includes","client_address","toLowerCase","client_fio","client_id","slice","show","typeRoute","ev","create","translucent","cssClass","popover","popoverHelp","present","showRoute","previousIndex","currentIndex","orderId","componentProps","popoverNote","action","orderPhones","parsePhone","client_phone","courierPhone","courier_phone","selectedPhone","callNumber","undefined","client_number","cur_number","resp","phone","phones","replace","normalizePhoneNumber","showHelp","doRefresh","segmentChanged","height","selector","templateUrl","styleUrls","animations","reorderGroup"],"mappings":"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","file":"pages-courier-courier-module-es5.js","sourcesContent":["import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport localeRu from '@angular/common/locales/ru';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { IconsModule } from '../../icons/icons.module';\nimport { CourierPage } from './courier.page';\n\nregisterLocaleData(localeRu, 'ru');\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CourierPage\n  }\n];\n\n@NgModule({\n  imports: [\n    IconsModule,\n    CommonModule,\n    FormsModule,\n    DragDropModule,\n    IonicModule,\n    ScrollingModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CourierPage],\n  providers: [\n    { provide: LOCALE_ID, useFactory: () => 'ru' }\n  ]\n})\nexport class CourierPageModule { }\n","<ion-header>\n  <ion-toolbar class='toolbar'>\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"findOrder()\">\n        <i-feather name=\"search\" slot='start'></i-feather>\n      </ion-button>\n      <ion-button *ngIf=\"auth.getGuessMode()\">\n        <i>G</i>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Мои заказы</ion-title>\n    <ion-title size=\"small\" color=\"dark\">{{state$.filial}}</ion-title>\n    <ion-buttons slot=\"primary\">\n      <ion-button *ngIf=\"subBtnCond\" (click)=\"submitOrder()\">\n        <i-feather name=\"box\"></i-feather>\n      </ion-button>\n      <ion-button *ngIf=\"courier.sortOrders?.g_process == 0 && !isWorkEnded\" (click)=\"endWork()\">\n        <i-feather name=\"check-square\"></i-feather>\n      </ion-button>\n      <ion-button (click)=\"showHelp($event)\">\n        <ion-icon slot=\"icon-only\" name=\"help-circle-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\n    <ion-refresher-content pullingIcon=\"arrow-dropdown\" pullingText=\"Потяните, чтобы обновить\"\n      refreshingSpinner=\"bubbles\" refreshingText=\"Обновление...\">\n    </ion-refresher-content>\n  </ion-refresher>\n\n  <div class=\"c-wrp\" [ngClass]=\"{  'm_wrp' : auth.getMode() == 'fullHand' || auth.getMode() == 'hand'}\">\n    <ion-segment (ionChange)=\"segmentChanged($event)\" value='1' style=\"height: 45px\">\n      <ion-segment-button value=\"1\">\n        <ion-label>В работе</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"4\">\n        <ion-label>Доставлено</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"6\">\n        <ion-label>Не доставлено</ion-label>\n      </ion-segment-button>\n    </ion-segment>\n    <div class=\"c-body\" *ngIf=\"ordersInit && !auth.getGuessMode()\">\n      <ion-searchbar placeholder=\"Поиск по заказам\" inputmode=\"text\" (ionChange)=\"onSearchChange($event)\"\n        [debounce]=\"250\" [(ngModel)]=\"searchString\" animated></ion-searchbar>\n\n      <cdk-virtual-scroll-viewport cdkDropList (cdkDropListDropped)=\"drop($event)\" itemSize=\"50\"\n        style=\"height: 100%; width: 100%; min-height: 50vh;\">\n        <ion-item *ngFor=\"let order of orders_c | async\" [ngClass]=\"{\n         overdue: order.overdue == '1' || order.required == true\n        }\" (click)=\"selectOrder(order.id)\" cdkDrag [cdkDragStartDelay]=\"500\">\n\n          <ion-label [@openClose]=\"order.show ? 'open' : 'closed'\">\n\n            <div class='title'>\n              <span>\n                <span class='client-id'> {{order.client_id}}</span>\n                <span> ({{order.company}})</span>\n              </span>\n              <span class='client-id'>\n                <span *ngIf=\"order.datetime_from\">c {{ order.datetime_from | date: 'H:mm':'ru' }} </span>\n                <span *ngIf=\"order.datetime_to\">до {{ order.datetime_to | date: 'H:mm':'ru' }}</span>\n              </span>\n            </div>\n            <div class='addr'>{{order.client_address}}</div>\n            <div class='name'>{{order.client_fio}}</div>\n            <div class='actions' *ngIf='order.show'>\n              <ion-button fill=\"solid\" size='default' (click)=\"note($event, order.id); $event.stopPropagation()\">\n                <ion-icon slot=\"start\" src='../../../assets/mdi-light_note-plus.svg'></ion-icon>\n                Заметки\n              </ion-button>\n              <ion-button fill=\"solid\" size='default' (click)=\"showRoute(order); $event.stopPropagation()\">\n                <ion-icon slot=\"start\" name=\"location-outline\"></ion-icon>\n                Маршрут\n              </ion-button>\n              <ion-button fill=\"solid\" size='default' (click)=\"phoneClick('init', order); $event.stopPropagation()\">\n                <ion-icon slot=\"start\" name=\"call-outline\"></ion-icon>\n                Позвонить\n              </ion-button>\n            </div>\n          </ion-label>\n\n\n          <ion-icon name=\"ellipsis-vertical\" slot='start'></ion-icon>\n\n          <div class=\"actions-button\" (click)=\"order.show = !order.show; $event.stopPropagation()\">\n            <ion-icon src='../../../assets/actions-arrows.svg' [ngClass]=\"{turned: order.show == true }\"></ion-icon>\n          </div>\n        </ion-item>\n      </cdk-virtual-scroll-viewport>\n    </div>\n\n    <div class=\"start-route\"\n      *ngIf=\"ordersInit && state$.orders_data != [] && state$.orders_data !== null && auth.checkState == 'checkedOut'\">\n      <button class=\"satrt-r-btn\" *ngIf=\"!btn_go && !this.state$.manual_route && auth.routingModeAuto\"\n        (click)=\"startRoute()\">\n        Начать маршрут\n      </button>\n      <button class=\"satrt-r-btn sr-stop\" *ngIf=\"btn_go && !this.state$.manual_route\" (click)=\"stopRoute()\">\n        Остановить маршрут\n      </button>\n      <button class=\"satrt-r-btn find-o-btn\" *ngIf=\"auth.getMode() == 'auto' || auth.getMode() == 'auto_wo'\"\n        [ngClass]=\"{  'manual_btn' : this.state$.manual_route}\" (click)=\"manualRoute()\">\n        <span *ngIf=\"this.state$.manual_route\">Автоматический режим</span>\n        <span *ngIf=\"!this.state$.manual_route\">Ручной режим</span>\n      </button>\n    </div>\n    <div class=\"scanWindow\" *ngIf=\"scanView\">\n      <div class=\"sw-wrp\">\n        <div class=\"sw-title\">Просканируйте штрихкод</div>\n        <input #sInput class=\"ionInp\" (change)=\"scanInputChange()\" [(ngModel)]=\"scanInput\" autofocus />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"shirm\" *ngIf=\"loader\">\n    <ion-spinner name=\"lines-small\"></ion-spinner>\n  </div>\n  <div class=\"call-window\" *ngIf=\"callWindow\">\n    <div class=\"cw-body\">\n      <i-feather name=\"x-square\" (click)=\"callWindow = !callWindow\" size=\"large\"></i-feather>\n      <ion-list *ngIf=\"orderPhones.length > 1\">\n        <ion-radio-group name=\"selectedPhone\" [(ngModel)]=\"selectedPhone\">\n          <ion-list-header>\n            <ion-label>Выберите номер</ion-label>\n          </ion-list-header>\n          <ion-item *ngFor=\"let phone of orderPhones\">\n            <ion-radio value=\"{{phone}}\"></ion-radio>\n            <ion-label>{{phone}}</ion-label>\n          </ion-item>\n        </ion-radio-group>\n      </ion-list>\n      <button (click)=\"phoneClick('phone', order)\"\n        *ngIf=\"settings.rules.phoneMode == 'robotPhone' || settings.rules.phoneMode == 'phone' \">\n        Позвонить со своего телефона\n      </button>\n      <button (click)=\"phoneClick('operator',order)\"\n        *ngIf=\"settings.rules.phoneMode == 'robotPhone' || settings.rules.phoneMode == 'robot' \">\n        Позвонить через ip-шлюз\n      </button>\n    </div>\n  </div>\n</ion-content>","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\nimport { CdkDrag, CdkDragDrop, CdkDropList, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { CallNumber } from '@ionic-native/call-number/ngx';\nimport { Vibration } from '@ionic-native/vibration/ngx';\nimport { IonReorderGroup, PopoverController } from \"@ionic/angular\";\nimport { Observable, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Order } from 'src/app/interfaces/order';\nimport { MapService } from 'src/app/services/sys/map.service';\nimport { OrderService } from 'src/app/services/sys/order.service';\nimport { HelpComponent } from '../../components/help/help.component';\nimport { NoteComponent } from '../../components/note/note.component';\nimport { AuthService } from '../../services/auth.service';\nimport { CourierService } from '../../services/courier.service';\nimport { SettingsService } from '../../services/settings.service';\nimport { StateService } from '../../services/state.service';\nimport { SysService } from '../../services/sys.service';\nimport { DataService } from '../../services/sys/data.service';\n\n\n@Component({\n  selector: 'app-courier',\n  templateUrl: './courier.page.html',\n  styleUrls: ['./courier.page.scss'],\n  animations: [\n    trigger('openClose', [\n      // ...\n      state('open', style({\n        height: '125px',\n      })),\n      state('closed', style({\n        height: '80px',\n      })),\n      transition('open => closed', [\n        animate('0.5s')\n      ]),\n      transition('closed => open', [\n        animate('0.5s')\n      ]),\n    ])\n  ]\n})\nexport class CourierPage implements OnInit {\n  @ViewChild(IonReorderGroup) reorderGroup: IonReorderGroup;\n  @ViewChild('sInput') public sInput: ElementRef;\n  @ViewChild(CdkDropList, { static: false })\n  Drop_L: CdkDropList;\n  @ViewChildren(CdkDrag)\n  DragItems: QueryList<CdkDrag>;\n\n  public orders: any = null;\n  public statuses: any = null;\n  public selectedTab = 1;\n  public ordersInit: boolean = false;\n  public loader: boolean = false;\n  public local_stop$: Subject<any> = new Subject();\n  public localcheck: boolean = false;\n  public g_done = 0;\n  public g_process = 0;\n  public g_fail = 0;\n  public lvl_ind = { width: '0%' };\n  public btn_go: boolean = false;\n  public notification = null;\n  public dragStarted: boolean = false;\n  public subBtnCond: boolean = true;\n  public scanView: boolean = false;\n  public scanInput;\n  public scan_process = false;\n  public find_order: boolean = false;\n  public isWorkEnded: boolean = false;\n  public searchString = '';\n  private ord: Observable<any[]>;\n  public orders_c: Observable<any>;\n  public slicer: number = this.howSlice();\n  public callWindow: boolean = false;\n  public selectedPhone: string;\n  public orderPhones: string[];\n  public order: Order;\n\n  constructor(public courier: CourierService,\n    private router: Router,\n    public state$: StateService,\n    public auth: AuthService,\n    private bs: BarcodeScanner,\n    private vbr: Vibration,\n    public settings: SettingsService,\n    private sys: SysService,\n    private data: DataService,\n    public popoverController: PopoverController,\n    private map: MapService,\n    private orderService: OrderService,\n    private CL: CallNumber,\n\n  ) {\n    let self = this;\n\n    this.initContent();\n    if (this.state$.position.getValue() != null) {\n      this.startRoute(false);\n    }\n\n\n    this.state$.state.pipe(takeUntil(this.local_stop$)).subscribe((state) => {\n      const a = state;\n      if (state == 'orders_init') {\n        self.initContent();\n      }\n    })\n    this.initConditions();\n    this.ord = this.data.orders.asObservable();\n    this.prepareOrdersList();\n\n  }\n\n  public initConditions() {\n    let app_mode = this.auth.getMode();\n    switch (app_mode) {\n      case 'fullAuto':\n        if (!this.state$.confirmed) this.subBtnCond = true;;\n        break;\n      case 'auto':\n        this.subBtnCond = false;\n        break;\n      case 'fullHand':\n        if (!this.state$.confirmed) this.subBtnCond = true;\n        break;\n      case 'hand':\n        this.subBtnCond = false;\n        break;\n    }\n  }\n\n  ngAfterViewChecked() {\n    this.Drop_L.autoScrollDisabled = false;\n    this.DragItems.changes.subscribe((r) => {\n      this.DragItems.forEach(DragItem => {\n        DragItem.dragStartDelay = {\n          touch: 500,\n          mouse: 100\n        }\n\n      })\n    });\n  }\n\n  ngOnInit() {\n    this.settings.checkout = !!(this.settings.rules.storeCheckMode - 0);\n    if (!this.settings.checkout) {\n      this.auth.checkState = 'checkedOut'\n    } else {\n      this.auth.checkState = 'checked' + localStorage.check\n    }\n    if (this.settings.rules.appMode == 'hand') {\n      this.state$.manual_route = true\n    }\n    this.data.orders.subscribe((orders) => {\n      this.courier.count_orders(orders)\n    })\n  }\n\n  public scanInputStart() {\n    let self = this;\n    this.scanView = !this.scanView;\n    this.loader = true;\n    if (this.auth.getScanMode() == 'scan') {\n      self.courier.findOrder(this.scanInput).subscribe((res) => {\n        self.scanInput = null;\n        if (res.success == 'true') {\n          self.courier.sumbitOrder(res.order_id).subscribe((re_s) => {\n            console.log('courier_page sbo resp', re_s);\n            if (re_s) {\n              self.submitOrder();\n            } else {\n              self.scanView = false;\n            }\n            self.loader = false;\n          });\n        } else {\n          self.auth.showError(2);\n          self.loader = false;\n          self.scanView = false;\n        }\n        self.state$.confirmed = true;\n        self.orders.forEach(order => {\n          if (order.confirm == '0') {\n            self.state$.confirmed = false;\n          }\n        });\n      })\n    } else {\n      self.loader = false;\n    }\n    this.scan_process = false;\n  }\n\n  public scanInputChange() {\n    console.log('inputData', this.scanInput);\n    let self = this;\n    if (this.scan_process) return false;\n    this.scan_process = true;\n    if (this.find_order) {\n      setTimeout(function () {\n        self.scanSearch();\n      }, 1500)\n    } else {\n      setTimeout(function () {\n        self.scanInputStart();\n      }, 1500)\n    }\n  }\n\n  public submitOrder() {\n    var self = this;\n    console.log('SUBMIT_ORDER_CALL');\n    if (this.auth.getScanMode() == 'scan') {\n      this.scanView = !this.scanView;\n      setTimeout(function () {\n        self.sInput.nativeElement.focus();\n      }, 500);\n      return false\n    }\n    this.bs.scan().then((data) => {\n      console.log('SCAN_RETURN_DATA', data);\n      if (data.text != \"\") {\n        self.loader = true;\n        self.courier.findOrder(data.text).subscribe((res) => {\n          if (res.success == 'true') {\n            self.courier.sumbitOrder(res.order_id).subscribe((re_s) => {\n              if (re_s) {\n                self.submitOrder();\n              }\n              self.loader = false;\n            });\n          } else {\n            self.auth.showError(2);\n            self.loader = false;\n          }\n          self.state$.confirmed = true;\n          self.orders.forEach(order => {\n            if (order.confirm == '0') {\n              self.state$.confirmed = false;\n            }\n          });\n        })\n      } else {\n        self.loader = false;\n      }\n    });\n  }\n\n  public ordersListChanged(orders) {\n    this.orders = orders;\n    let way: any[] = new Array();\n    orders.forEach(order => {\n      if (Number(order.status_id) == 1) {\n        way.push(order.id);\n      }\n    });\n    this.state$.old_way = way;\n  }\n\n  ngOnDestroy() {\n    this.local_stop$.next();\n    this.state$.orders_page_check = false;\n  }\n\n  public manualRoute() {\n    if (this.state$.manual_route) {\n      this.courier.changeRouteMode('auto');\n    } else {\n      this.courier.changeRouteMode('fullHand');\n    }\n    this.vbr.vibrate(300);\n  }\n\n\n  public initContent() {\n    var self = this;\n    this.state$.orders.subscribe(() => {\n\n\n      this.orders = this.state$.orders_data;\n      console.log('sys::initСontent orders', this.orders);\n      this.statuses = [{ \"id\": 4, \"status\": \"Не доставлено\" }, { \"id\": 5, \"status\": \"Доставлено\" }, { \"id\": 6, \"status\": \"Частично доставлено\" }];\n\n      this.ordersInit = true;\n      self.count_orders();\n    })\n  }\n\n\n  public getStatus(order) {\n    return this.courier.getStatus(order);\n  }\n\n  public selectOrder(id) {\n    this.router.navigate(['/order', id]);\n  }\n\n  public tabSelect(tab) {\n    this.selectedTab = tab;\n  }\n\n  customTrackBy(index: number, obj: any): any {\n    return index;\n  }\n\n  public getCondition(status) {\n    switch (this.selectedTab) {\n      case 1:\n        if (status == 1) return true;\n        break;\n      case 2:\n        if (status == 5 || status == 6) return true;\n        break;\n      case 3:\n        if (status == 4) return true;\n        break;\n    }\n    return false;\n  }\n\n  public count_orders(orders = this.courier.ordersInfo) {\n    let g_done = 0;\n    let g_process = 0;\n    let g_fail = 0;\n\n    for (let i = 0; i < orders.length; i++) {\n      switch (String(orders[i].status_id)) {\n        case '4':\n          g_fail++;\n          break;\n        case '5':\n          g_done++;\n          break;\n        case '6':\n          g_done++;\n          break;\n        case '1':\n          g_process++;\n          break;\n      }\n    }\n    this.g_done = g_done;\n    this.g_process = g_process;\n    this.g_fail = g_fail;\n  }\n\n  public startRoute(start = true, stop = false) {\n    let self = this;\n    this.auth.checkAuth().subscribe((data) => {\n      if (data.success == 'true') {\n        self.sendStartRoute(data.sync_id, start, stop);\n      }\n    })\n  }\n\n  public stopRoute() {\n    this.startRoute(false, true);\n  }\n\n\n  public sendStartRoute(cid, start, stop) {\n    const url = \"geo/route_start.php\";\n    let data = {\n      'cid': cid,\n      'lt': this.state$.position.getValue().lt,\n      'lg': this.state$.position.getValue().lg\n    };\n    if (start) {\n      data['start'] = '1';\n    }\n    if (stop) {\n      data['stop'] = '1';\n    }\n    let self = this;\n    this.auth.sendPost(url, data).subscribe((data) => {\n      if (data.success == true) {\n        self.btn_go = true;\n        if (data.result == 'stop') {\n          self.btn_go = false;\n        }\n      }\n    });\n  }\n\n  public scanSearch() {\n    let self = this;\n    this.scanView = !this.scanView;\n    this.loader = true;\n    if (this.auth.getScanMode() == 'scan') {\n      self.courier.findOrder(this.scanInput).subscribe((res) => {\n        self.scanInput = null;\n        if (res.success == 'true') {\n          self.selectOrder(res.order_id);\n        } else {\n          self.auth.showError(2);\n        }\n        self.loader = false;\n        self.scanView = false;\n      })\n    } else {\n      self.loader = false;\n    }\n    this.scan_process = false;\n    this.find_order = false;\n  }\n\n  public findOrder() {\n    let self = this;\n    if (this.auth.getScanMode() == 'scan') {\n      this.scanView = !this.scanView;\n      this.find_order = true;\n      setTimeout(function () {\n        self.sInput.nativeElement.focus();\n      }, 500);\n      return false\n    }\n\n    this.bs.scan().then((data) => {\n      self.courier.findOrder(data.text).subscribe((res) => {\n        if (res.success == 'true') {\n          self.selectOrder(res.order_id);\n        } else {\n          self.auth.showError(2);\n        }\n      })\n    });\n  }\n\n  //Завершение рабочего дня курьера\n  public endWork() {\n    this.courier.endWork().subscribe((data: { success: boolean }) => {\n      if (data.success) {\n        this.isWorkEnded = true;\n        this.sys.presentToast('Рабочий день завершен',\n          'success')\n      }\n    },\n      error => {\n        this.sys.presentToast('Ошибка: ' + error.message, 'danger')\n      })\n\n  }\n  doRefresh(event) {\n    this.data.getApiData().add(event.target.complete());\n\n  }\n\n  public segmentChanged(event) {\n    let ids = [Number(event.target.value)];\n    if (event.target.value == '4') {\n      ids.push(5)\n    }\n    this.prepareOrdersList(ids)\n  }\n\n  public onSearchChange(event) {\n\n\n  }\n  public prepareOrdersList(ids = [1]) {\n\n    this.orders_c = this.ord.pipe(\n      map(\n        orders => orders && orders.filter(order => ids.includes(Number(order.status_id)))\n          .filter(\n            order => order.client_address.toLowerCase().includes(this.searchString.toLowerCase()) || order.client_fio.toLowerCase().includes(this.searchString.toLowerCase()) ||\n              order.client_id.toLowerCase().includes(this.searchString.toLowerCase())\n          )\n          .slice(this.slicer)\n      ),\n      map(\n        (orders) => { orders.forEach((order) => { order.show = false }); this.orders = orders; return orders }\n      )\n    );\n\n  }\n  public howSlice(): number {\n    return (this.settings.rules.typeRoute === 'standart' ? 0 : 1)\n  }\n\n  async popoverHelp(ev: any) {\n    const popover = await this.popoverController.create({\n      component: HelpComponent,\n      event: ev,\n      translucent: true,\n      cssClass: 'help'\n    });\n    return popover\n  }\n\n  async showHelp(ev) {\n    let popover = await this.popoverHelp(ev);\n    popover.present();\n\n  }\n\n  public showRoute(order) {\n    this.map.showRoute(order)\n  }\n\n  public drop(event: CdkDragDrop<any[]>) {\n\n    moveItemInArray(this.orders, event.previousIndex, event.currentIndex);\n    this.data.orders.next(this.orders);\n    console.log('sys:: массив заказов после перетаскивания: ', this.orders);\n  }\n\n  async popoverNote(ev: any, orderId: string) {\n    const popover = await this.popoverController.create({\n      component: NoteComponent,\n      event: ev,\n      translucent: true,\n      cssClass: 'help',\n      componentProps: {\n        \"orderId\": orderId\n      }\n    });\n    return popover\n  }\n\n  public async note(ev, orderId: string) {\n    let popover = await this.popoverNote(ev, orderId);\n    popover.present();\n  }\n\n  //Звонок получателю заказа\n  public phoneClick(action: string, order: Order) {\n    this.order = order;\n    this.orderPhones = this.parsePhone(order.client_phone);\n    let courierPhone = this.parsePhone(order.courier_phone)[0];\n    if (this.orderPhones.length == 1) {\n      this.selectedPhone = this.orderPhones[0];\n    }\n\n    switch (action) {\n      case \"init\":\n        this.callWindow = !this.callWindow;\n        break;\n      case \"phone\":\n        this.CL.callNumber(this.selectedPhone, false).then(() => { });\n        this.callWindow = false;\n        this.order = undefined;\n        break;\n      case \"operator\":\n        if (this.selectedPhone && courierPhone) {\n          let url = \"orders\";\n          let data = {\n            action: \"send_phone\",\n            client_number: this.selectedPhone,\n            cur_number: courierPhone,\n          };\n          this.auth.sendPost(url, data).subscribe((resp) => {\n            console.log(\"call_subs\", resp);\n          });\n          this.auth.showError(9);\n          this.callWindow = false;\n        }\n        this.order = undefined;\n        break;\n    }\n  }\n\n  //Парсинг номера телефона из строки с лишним мусором\n  public parsePhone(phone): Array<string> {\n    let phones: Array<string> = [];\n    phone = phone.replace(/\\D+/g, \"\");\n\n    while (phone.length > 7) {\n      phone = this.normalizePhoneNumber(phone);\n      phones.push(phone.slice(\"\", 11));\n      phone = phone.slice(11);\n    }\n    return phones;\n  }\n\n  //Жонглирование '8' / '+7'\n  private normalizePhoneNumber(phone): string {\n    if (phone[0] !== \"8\" && phone[0] !== \"7\" && phone.length !== 11) {\n      phone = \"8\" + phone;\n    }\n    if (phone.length == 7 || phone.length == 10) {\n      phone = \"8\" + phone;\n    }\n    if (phone[0] !== \"8\" && phone.length == 11) {\n      phone = \"8\" + phone.slice(1);\n    }\n    return phone;\n  }\n\n\n}\n"]}